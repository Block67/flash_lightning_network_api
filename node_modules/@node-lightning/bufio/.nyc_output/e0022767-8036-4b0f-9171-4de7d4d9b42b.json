{"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufBE.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufBE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":46}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":36}}},"fnMap":{"0":{"name":"bigFromBufBE","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":21}},"loc":{"start":{"line":4,"column":27},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":4,"3":1},"f":{"0":4},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufBE.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufBE.ts"],"names":[],"mappings":";;;AAAA,SAAgB,YAAY,CAAC,GAAW;IACpC,OAAO,MAAM,CAAC,IAAI,GAAG,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9C,CAAC;AAFD,oCAEC","sourcesContent":["export function bigFromBufBE(buf: Buffer): bigint {\n    return BigInt(\"0x\" + buf.toString(\"hex\"));\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d311d8aaa8a3d47dbadfa9e50e2bbe75fd7a4d09"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufLE.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufLE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":67}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":36}}},"fnMap":{"0":{"name":"bigFromBufLE","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":21}},"loc":{"start":{"line":5,"column":27},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufLE.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigFromBufLE.ts"],"names":[],"mappings":";;;AAAA,iDAA8C;AAE9C,SAAgB,YAAY,CAAC,GAAW;IACpC,OAAO,2BAAY,CAAC,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;AACpD,CAAC;AAFD,oCAEC","sourcesContent":["import { bigFromBufBE } from \"./bigFromBufBE\";\n\nexport function bigFromBufLE(buf: Buffer): bigint {\n    return bigFromBufBE(Buffer.from(buf).reverse());\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4416862a7d73b3baf17d836e95e96049e13bbc52"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufBE.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufBE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":5,"column":14},"end":{"line":5,"column":30}},"3":{"start":{"line":6,"column":4},"end":{"line":9,"column":24}},"4":{"start":{"line":7,"column":8},"end":{"line":7,"column":41}},"5":{"start":{"line":8,"column":9},"end":{"line":9,"column":24}},"6":{"start":{"line":9,"column":8},"end":{"line":9,"column":24}},"7":{"start":{"line":10,"column":4},"end":{"line":10,"column":35}},"8":{"start":{"line":12,"column":0},"end":{"line":12,"column":32}}},"fnMap":{"0":{"name":"bigToBufBE","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":19}},"loc":{"start":{"line":4,"column":30},"end":{"line":11,"column":1}},"line":4}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":4},"end":{"line":9,"column":24}},"type":"if","locations":[{"start":{"line":6,"column":4},"end":{"line":9,"column":24}},{"start":{"line":6,"column":4},"end":{"line":9,"column":24}}],"line":6},"1":{"loc":{"start":{"line":8,"column":9},"end":{"line":9,"column":24}},"type":"if","locations":[{"start":{"line":8,"column":9},"end":{"line":9,"column":24}},{"start":{"line":8,"column":9},"end":{"line":9,"column":24}}],"line":8}},"s":{"0":1,"1":1,"2":5,"3":5,"4":4,"5":1,"6":1,"7":5,"8":1},"f":{"0":5},"b":{"0":[4,1],"1":[1,0]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufBE.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufBE.ts"],"names":[],"mappings":";;;AAAA,SAAgB,UAAU,CAAC,GAAW,EAAE,GAAY;IAChD,IAAI,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;IAC3B,IAAI,GAAG;QAAE,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,GAAG,GAAG,CAAC,EAAE,GAAG,CAAC,CAAC;SACrC,IAAI,GAAG,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;QAAE,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IAC/C,OAAO,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,CAAC,CAAC;AACnC,CAAC;AALD,gCAKC","sourcesContent":["export function bigToBufBE(num: bigint, len?: number): Buffer {\n    let str = num.toString(16);\n    if (len) str = str.padStart(len * 2, \"0\");\n    else if (str.length % 2 === 1) str = \"0\" + str;\n    return Buffer.from(str, \"hex\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9bd648db1f98b10a6e62d8dcd4b00b6efdd3ad88"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufLE.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufLE.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":28}},"2":{"start":{"line":4,"column":21},"end":{"line":4,"column":44}},"3":{"start":{"line":6,"column":4},"end":{"line":6,"column":55}},"4":{"start":{"line":8,"column":0},"end":{"line":8,"column":32}}},"fnMap":{"0":{"name":"bigToBufLE","decl":{"start":{"line":5,"column":9},"end":{"line":5,"column":19}},"loc":{"start":{"line":5,"column":30},"end":{"line":7,"column":1}},"line":5}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":2,"4":1},"f":{"0":2},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufLE.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bigToBufLE.ts"],"names":[],"mappings":";;;AAAA,6CAA0C;AAE1C,SAAgB,UAAU,CAAC,GAAW,EAAE,GAAY;IAChD,OAAO,uBAAU,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,OAAO,EAAE,CAAC;AAC1C,CAAC;AAFD,gCAEC","sourcesContent":["import { bigToBufBE } from \"./bigToBufBE\";\n\nexport function bigToBufLE(num: bigint, len?: number): Buffer {\n    return bigToBufBE(num, len).reverse();\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"aee3a33e85ff6d1f191ff59448e55443146339cc"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferReader.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferReader.ts","statementMap":{"0":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"1":{"start":{"line":3,"column":4},"end":{"line":3,"column":62}},"2":{"start":{"line":5,"column":0},"end":{"line":5,"column":62}},"3":{"start":{"line":6,"column":0},"end":{"line":6,"column":30}},"4":{"start":{"line":7,"column":17},"end":{"line":7,"column":51}},"5":{"start":{"line":16,"column":8},"end":{"line":16,"column":71}},"6":{"start":{"line":17,"column":8},"end":{"line":17,"column":30}},"7":{"start":{"line":18,"column":8},"end":{"line":18,"column":27}},"8":{"start":{"line":19,"column":8},"end":{"line":19,"column":32}},"9":{"start":{"line":26,"column":8},"end":{"line":27,"column":21}},"10":{"start":{"line":27,"column":12},"end":{"line":27,"column":21}},"11":{"start":{"line":28,"column":8},"end":{"line":29,"column":21}},"12":{"start":{"line":29,"column":12},"end":{"line":29,"column":21}},"13":{"start":{"line":30,"column":8},"end":{"line":33,"column":21}},"14":{"start":{"line":31,"column":12},"end":{"line":31,"column":21}},"15":{"start":{"line":33,"column":12},"end":{"line":33,"column":21}},"16":{"start":{"line":39,"column":8},"end":{"line":39,"column":30}},"17":{"start":{"line":42,"column":8},"end":{"line":42,"column":29}},"18":{"start":{"line":48,"column":8},"end":{"line":48,"column":54}},"19":{"start":{"line":55,"column":8},"end":{"line":55,"column":28}},"20":{"start":{"line":63,"column":8},"end":{"line":63,"column":35}},"21":{"start":{"line":69,"column":8},"end":{"line":69,"column":58}},"22":{"start":{"line":75,"column":8},"end":{"line":75,"column":61}},"23":{"start":{"line":81,"column":8},"end":{"line":81,"column":61}},"24":{"start":{"line":87,"column":8},"end":{"line":87,"column":61}},"25":{"start":{"line":93,"column":8},"end":{"line":93,"column":61}},"26":{"start":{"line":99,"column":8},"end":{"line":99,"column":64}},"27":{"start":{"line":105,"column":8},"end":{"line":108,"column":34}},"28":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"29":{"start":{"line":117,"column":12},"end":{"line":117,"column":55}},"30":{"start":{"line":119,"column":23},"end":{"line":119,"column":67}},"31":{"start":{"line":120,"column":8},"end":{"line":120,"column":30}},"32":{"start":{"line":121,"column":8},"end":{"line":121,"column":34}},"33":{"start":{"line":122,"column":8},"end":{"line":122,"column":22}},"34":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"35":{"start":{"line":131,"column":12},"end":{"line":131,"column":55}},"36":{"start":{"line":133,"column":23},"end":{"line":133,"column":67}},"37":{"start":{"line":134,"column":8},"end":{"line":134,"column":30}},"38":{"start":{"line":135,"column":8},"end":{"line":135,"column":34}},"39":{"start":{"line":136,"column":8},"end":{"line":136,"column":22}},"40":{"start":{"line":154,"column":21},"end":{"line":154,"column":37}},"41":{"start":{"line":155,"column":8},"end":{"line":158,"column":9}},"42":{"start":{"line":156,"column":12},"end":{"line":156,"column":36}},"43":{"start":{"line":157,"column":12},"end":{"line":157,"column":32}},"44":{"start":{"line":159,"column":8},"end":{"line":169,"column":9}},"45":{"start":{"line":161,"column":16},"end":{"line":161,"column":40}},"46":{"start":{"line":162,"column":16},"end":{"line":162,"column":51}},"47":{"start":{"line":164,"column":16},"end":{"line":164,"column":40}},"48":{"start":{"line":165,"column":16},"end":{"line":165,"column":51}},"49":{"start":{"line":167,"column":16},"end":{"line":167,"column":40}},"50":{"start":{"line":168,"column":16},"end":{"line":168,"column":43}},"51":{"start":{"line":186,"column":21},"end":{"line":186,"column":37}},"52":{"start":{"line":187,"column":8},"end":{"line":190,"column":9}},"53":{"start":{"line":188,"column":12},"end":{"line":188,"column":36}},"54":{"start":{"line":189,"column":12},"end":{"line":189,"column":32}},"55":{"start":{"line":191,"column":8},"end":{"line":213,"column":9}},"56":{"start":{"line":193,"column":16},"end":{"line":193,"column":40}},"57":{"start":{"line":194,"column":28},"end":{"line":194,"column":47}},"58":{"start":{"line":195,"column":16},"end":{"line":196,"column":71}},"59":{"start":{"line":196,"column":20},"end":{"line":196,"column":71}},"60":{"start":{"line":197,"column":16},"end":{"line":197,"column":35}},"61":{"start":{"line":200,"column":16},"end":{"line":200,"column":40}},"62":{"start":{"line":201,"column":28},"end":{"line":201,"column":47}},"63":{"start":{"line":202,"column":16},"end":{"line":203,"column":71}},"64":{"start":{"line":203,"column":20},"end":{"line":203,"column":71}},"65":{"start":{"line":204,"column":16},"end":{"line":204,"column":35}},"66":{"start":{"line":207,"column":16},"end":{"line":207,"column":40}},"67":{"start":{"line":208,"column":28},"end":{"line":208,"column":47}},"68":{"start":{"line":209,"column":16},"end":{"line":210,"column":71}},"69":{"start":{"line":210,"column":20},"end":{"line":210,"column":71}},"70":{"start":{"line":211,"column":16},"end":{"line":211,"column":27}},"71":{"start":{"line":224,"column":8},"end":{"line":248,"column":9}},"72":{"start":{"line":225,"column":12},"end":{"line":225,"column":36}},"73":{"start":{"line":226,"column":12},"end":{"line":226,"column":35}},"74":{"start":{"line":228,"column":13},"end":{"line":248,"column":9}},"75":{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},"76":{"start":{"line":230,"column":16},"end":{"line":230,"column":59}},"77":{"start":{"line":232,"column":26},"end":{"line":232,"column":82}},"78":{"start":{"line":233,"column":27},"end":{"line":233,"column":60}},"79":{"start":{"line":234,"column":12},"end":{"line":234,"column":34}},"80":{"start":{"line":235,"column":12},"end":{"line":235,"column":38}},"81":{"start":{"line":236,"column":12},"end":{"line":236,"column":26}},"82":{"start":{"line":239,"column":12},"end":{"line":242,"column":13}},"83":{"start":{"line":240,"column":16},"end":{"line":240,"column":40}},"84":{"start":{"line":241,"column":16},"end":{"line":241,"column":39}},"85":{"start":{"line":243,"column":26},"end":{"line":243,"column":60}},"86":{"start":{"line":244,"column":27},"end":{"line":244,"column":60}},"87":{"start":{"line":245,"column":12},"end":{"line":245,"column":49}},"88":{"start":{"line":246,"column":12},"end":{"line":246,"column":48}},"89":{"start":{"line":247,"column":12},"end":{"line":247,"column":26}},"90":{"start":{"line":256,"column":8},"end":{"line":273,"column":9}},"91":{"start":{"line":257,"column":12},"end":{"line":257,"column":35}},"92":{"start":{"line":259,"column":13},"end":{"line":273,"column":9}},"93":{"start":{"line":260,"column":12},"end":{"line":262,"column":13}},"94":{"start":{"line":261,"column":16},"end":{"line":261,"column":59}},"95":{"start":{"line":263,"column":26},"end":{"line":263,"column":82}},"96":{"start":{"line":264,"column":27},"end":{"line":264,"column":60}},"97":{"start":{"line":265,"column":12},"end":{"line":265,"column":26}},"98":{"start":{"line":268,"column":12},"end":{"line":269,"column":59}},"99":{"start":{"line":269,"column":16},"end":{"line":269,"column":59}},"100":{"start":{"line":270,"column":26},"end":{"line":270,"column":60}},"101":{"start":{"line":271,"column":27},"end":{"line":271,"column":60}},"102":{"start":{"line":272,"column":12},"end":{"line":272,"column":26}},"103":{"start":{"line":279,"column":21},"end":{"line":279,"column":70}},"104":{"start":{"line":280,"column":8},"end":{"line":281,"column":21}},"105":{"start":{"line":281,"column":12},"end":{"line":281,"column":21}},"106":{"start":{"line":282,"column":20},"end":{"line":282,"column":65}},"107":{"start":{"line":283,"column":8},"end":{"line":283,"column":52}},"108":{"start":{"line":284,"column":8},"end":{"line":284,"column":31}},"109":{"start":{"line":285,"column":8},"end":{"line":285,"column":19}},"110":{"start":{"line":291,"column":21},"end":{"line":291,"column":70}},"111":{"start":{"line":292,"column":8},"end":{"line":293,"column":21}},"112":{"start":{"line":293,"column":12},"end":{"line":293,"column":21}},"113":{"start":{"line":294,"column":20},"end":{"line":294,"column":65}},"114":{"start":{"line":295,"column":8},"end":{"line":295,"column":52}},"115":{"start":{"line":296,"column":8},"end":{"line":296,"column":31}},"116":{"start":{"line":297,"column":8},"end":{"line":297,"column":19}},"117":{"start":{"line":303,"column":21},"end":{"line":303,"column":70}},"118":{"start":{"line":304,"column":8},"end":{"line":305,"column":29}},"119":{"start":{"line":305,"column":12},"end":{"line":305,"column":29}},"120":{"start":{"line":306,"column":20},"end":{"line":306,"column":100}},"121":{"start":{"line":307,"column":20},"end":{"line":307,"column":38}},"122":{"start":{"line":308,"column":8},"end":{"line":308,"column":44}},"123":{"start":{"line":309,"column":8},"end":{"line":309,"column":31}},"124":{"start":{"line":310,"column":8},"end":{"line":310,"column":19}},"125":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"126":{"start":{"line":319,"column":12},"end":{"line":319,"column":55}},"127":{"start":{"line":322,"column":23},"end":{"line":322,"column":55}},"128":{"start":{"line":323,"column":8},"end":{"line":323,"column":30}},"129":{"start":{"line":324,"column":8},"end":{"line":324,"column":34}},"130":{"start":{"line":325,"column":8},"end":{"line":325,"column":22}},"131":{"start":{"line":333,"column":20},"end":{"line":333,"column":39}},"132":{"start":{"line":334,"column":8},"end":{"line":338,"column":9}},"133":{"start":{"line":334,"column":21},"end":{"line":334,"column":22}},"134":{"start":{"line":335,"column":12},"end":{"line":337,"column":13}},"135":{"start":{"line":336,"column":16},"end":{"line":336,"column":61}},"136":{"start":{"line":341,"column":0},"end":{"line":341,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":2,"column":56},"end":{"line":2,"column":57}},"loc":{"start":{"line":2,"column":71},"end":{"line":4,"column":1}},"line":2},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":4},"end":{"line":15,"column":5}},"loc":{"start":{"line":15,"column":24},"end":{"line":20,"column":5}},"line":15},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":29},"end":{"line":34,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":19},"end":{"line":40,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":41,"column":4},"end":{"line":41,"column":5}},"loc":{"start":{"line":41,"column":22},"end":{"line":43,"column":5}},"line":41},"5":{"name":"(anonymous_5)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":14},"end":{"line":49,"column":5}},"line":47},"6":{"name":"(anonymous_6)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":17},"end":{"line":56,"column":5}},"line":54},"7":{"name":"(anonymous_7)","decl":{"start":{"line":62,"column":4},"end":{"line":62,"column":5}},"loc":{"start":{"line":62,"column":24},"end":{"line":64,"column":5}},"line":62},"8":{"name":"(anonymous_8)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":16},"end":{"line":70,"column":5}},"line":68},"9":{"name":"(anonymous_9)","decl":{"start":{"line":74,"column":4},"end":{"line":74,"column":5}},"loc":{"start":{"line":74,"column":19},"end":{"line":76,"column":5}},"line":74},"10":{"name":"(anonymous_10)","decl":{"start":{"line":80,"column":4},"end":{"line":80,"column":5}},"loc":{"start":{"line":80,"column":19},"end":{"line":82,"column":5}},"line":80},"11":{"name":"(anonymous_11)","decl":{"start":{"line":86,"column":4},"end":{"line":86,"column":5}},"loc":{"start":{"line":86,"column":19},"end":{"line":88,"column":5}},"line":86},"12":{"name":"(anonymous_12)","decl":{"start":{"line":92,"column":4},"end":{"line":92,"column":5}},"loc":{"start":{"line":92,"column":19},"end":{"line":94,"column":5}},"line":92},"13":{"name":"(anonymous_13)","decl":{"start":{"line":98,"column":4},"end":{"line":98,"column":5}},"loc":{"start":{"line":98,"column":19},"end":{"line":100,"column":5}},"line":98},"14":{"name":"(anonymous_14)","decl":{"start":{"line":104,"column":4},"end":{"line":104,"column":5}},"loc":{"start":{"line":104,"column":19},"end":{"line":109,"column":5}},"line":104},"15":{"name":"(anonymous_15)","decl":{"start":{"line":115,"column":4},"end":{"line":115,"column":5}},"loc":{"start":{"line":115,"column":20},"end":{"line":123,"column":5}},"line":115},"16":{"name":"(anonymous_16)","decl":{"start":{"line":129,"column":4},"end":{"line":129,"column":5}},"loc":{"start":{"line":129,"column":20},"end":{"line":137,"column":5}},"line":129},"17":{"name":"(anonymous_17)","decl":{"start":{"line":153,"column":4},"end":{"line":153,"column":5}},"loc":{"start":{"line":153,"column":18},"end":{"line":170,"column":5}},"line":153},"18":{"name":"(anonymous_18)","decl":{"start":{"line":185,"column":4},"end":{"line":185,"column":5}},"loc":{"start":{"line":185,"column":18},"end":{"line":214,"column":5}},"line":185},"19":{"name":"(anonymous_19)","decl":{"start":{"line":223,"column":4},"end":{"line":223,"column":5}},"loc":{"start":{"line":223,"column":19},"end":{"line":249,"column":5}},"line":223},"20":{"name":"(anonymous_20)","decl":{"start":{"line":255,"column":4},"end":{"line":255,"column":5}},"loc":{"start":{"line":255,"column":19},"end":{"line":274,"column":5}},"line":255},"21":{"name":"(anonymous_21)","decl":{"start":{"line":278,"column":4},"end":{"line":278,"column":5}},"loc":{"start":{"line":278,"column":18},"end":{"line":286,"column":5}},"line":278},"22":{"name":"(anonymous_22)","decl":{"start":{"line":290,"column":4},"end":{"line":290,"column":5}},"loc":{"start":{"line":290,"column":18},"end":{"line":298,"column":5}},"line":290},"23":{"name":"(anonymous_23)","decl":{"start":{"line":302,"column":4},"end":{"line":302,"column":5}},"loc":{"start":{"line":302,"column":18},"end":{"line":311,"column":5}},"line":302},"24":{"name":"(anonymous_24)","decl":{"start":{"line":317,"column":4},"end":{"line":317,"column":5}},"loc":{"start":{"line":317,"column":27},"end":{"line":326,"column":5}},"line":317},"25":{"name":"(anonymous_25)","decl":{"start":{"line":332,"column":4},"end":{"line":332,"column":5}},"loc":{"start":{"line":332,"column":36},"end":{"line":339,"column":5}},"line":332}},"branchMap":{"0":{"loc":{"start":{"line":2,"column":22},"end":{"line":4,"column":1}},"type":"binary-expr","locations":[{"start":{"line":2,"column":23},"end":{"line":2,"column":27}},{"start":{"line":2,"column":31},"end":{"line":2,"column":51}},{"start":{"line":2,"column":56},"end":{"line":4,"column":1}}],"line":2},"1":{"loc":{"start":{"line":3,"column":11},"end":{"line":3,"column":61}},"type":"cond-expr","locations":[{"start":{"line":3,"column":37},"end":{"line":3,"column":40}},{"start":{"line":3,"column":43},"end":{"line":3,"column":61}}],"line":3},"2":{"loc":{"start":{"line":3,"column":12},"end":{"line":3,"column":33}},"type":"binary-expr","locations":[{"start":{"line":3,"column":12},"end":{"line":3,"column":15}},{"start":{"line":3,"column":19},"end":{"line":3,"column":33}}],"line":3},"3":{"loc":{"start":{"line":26,"column":8},"end":{"line":27,"column":21}},"type":"if","locations":[{"start":{"line":26,"column":8},"end":{"line":27,"column":21}},{"start":{"line":26,"column":8},"end":{"line":27,"column":21}}],"line":26},"4":{"loc":{"start":{"line":28,"column":8},"end":{"line":29,"column":21}},"type":"if","locations":[{"start":{"line":28,"column":8},"end":{"line":29,"column":21}},{"start":{"line":28,"column":8},"end":{"line":29,"column":21}}],"line":28},"5":{"loc":{"start":{"line":30,"column":8},"end":{"line":33,"column":21}},"type":"if","locations":[{"start":{"line":30,"column":8},"end":{"line":33,"column":21}},{"start":{"line":30,"column":8},"end":{"line":33,"column":21}}],"line":30},"6":{"loc":{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},"type":"if","locations":[{"start":{"line":116,"column":8},"end":{"line":118,"column":9}},{"start":{"line":116,"column":8},"end":{"line":118,"column":9}}],"line":116},"7":{"loc":{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},"type":"if","locations":[{"start":{"line":130,"column":8},"end":{"line":132,"column":9}},{"start":{"line":130,"column":8},"end":{"line":132,"column":9}}],"line":130},"8":{"loc":{"start":{"line":155,"column":8},"end":{"line":158,"column":9}},"type":"if","locations":[{"start":{"line":155,"column":8},"end":{"line":158,"column":9}},{"start":{"line":155,"column":8},"end":{"line":158,"column":9}}],"line":155},"9":{"loc":{"start":{"line":159,"column":8},"end":{"line":169,"column":9}},"type":"switch","locations":[{"start":{"line":160,"column":12},"end":{"line":162,"column":51}},{"start":{"line":163,"column":12},"end":{"line":165,"column":51}},{"start":{"line":166,"column":12},"end":{"line":168,"column":43}}],"line":159},"10":{"loc":{"start":{"line":187,"column":8},"end":{"line":190,"column":9}},"type":"if","locations":[{"start":{"line":187,"column":8},"end":{"line":190,"column":9}},{"start":{"line":187,"column":8},"end":{"line":190,"column":9}}],"line":187},"11":{"loc":{"start":{"line":191,"column":8},"end":{"line":213,"column":9}},"type":"switch","locations":[{"start":{"line":192,"column":12},"end":{"line":198,"column":13}},{"start":{"line":199,"column":12},"end":{"line":205,"column":13}},{"start":{"line":206,"column":12},"end":{"line":212,"column":13}}],"line":191},"12":{"loc":{"start":{"line":195,"column":16},"end":{"line":196,"column":71}},"type":"if","locations":[{"start":{"line":195,"column":16},"end":{"line":196,"column":71}},{"start":{"line":195,"column":16},"end":{"line":196,"column":71}}],"line":195},"13":{"loc":{"start":{"line":202,"column":16},"end":{"line":203,"column":71}},"type":"if","locations":[{"start":{"line":202,"column":16},"end":{"line":203,"column":71}},{"start":{"line":202,"column":16},"end":{"line":203,"column":71}}],"line":202},"14":{"loc":{"start":{"line":209,"column":16},"end":{"line":210,"column":71}},"type":"if","locations":[{"start":{"line":209,"column":16},"end":{"line":210,"column":71}},{"start":{"line":209,"column":16},"end":{"line":210,"column":71}}],"line":209},"15":{"loc":{"start":{"line":224,"column":8},"end":{"line":248,"column":9}},"type":"if","locations":[{"start":{"line":224,"column":8},"end":{"line":248,"column":9}},{"start":{"line":224,"column":8},"end":{"line":248,"column":9}}],"line":224},"16":{"loc":{"start":{"line":228,"column":13},"end":{"line":248,"column":9}},"type":"if","locations":[{"start":{"line":228,"column":13},"end":{"line":248,"column":9}},{"start":{"line":228,"column":13},"end":{"line":248,"column":9}}],"line":228},"17":{"loc":{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},"type":"if","locations":[{"start":{"line":229,"column":12},"end":{"line":231,"column":13}},{"start":{"line":229,"column":12},"end":{"line":231,"column":13}}],"line":229},"18":{"loc":{"start":{"line":239,"column":12},"end":{"line":242,"column":13}},"type":"if","locations":[{"start":{"line":239,"column":12},"end":{"line":242,"column":13}},{"start":{"line":239,"column":12},"end":{"line":242,"column":13}}],"line":239},"19":{"loc":{"start":{"line":256,"column":8},"end":{"line":273,"column":9}},"type":"if","locations":[{"start":{"line":256,"column":8},"end":{"line":273,"column":9}},{"start":{"line":256,"column":8},"end":{"line":273,"column":9}}],"line":256},"20":{"loc":{"start":{"line":259,"column":13},"end":{"line":273,"column":9}},"type":"if","locations":[{"start":{"line":259,"column":13},"end":{"line":273,"column":9}},{"start":{"line":259,"column":13},"end":{"line":273,"column":9}}],"line":259},"21":{"loc":{"start":{"line":260,"column":12},"end":{"line":262,"column":13}},"type":"if","locations":[{"start":{"line":260,"column":12},"end":{"line":262,"column":13}},{"start":{"line":260,"column":12},"end":{"line":262,"column":13}}],"line":260},"22":{"loc":{"start":{"line":268,"column":12},"end":{"line":269,"column":59}},"type":"if","locations":[{"start":{"line":268,"column":12},"end":{"line":269,"column":59}},{"start":{"line":268,"column":12},"end":{"line":269,"column":59}}],"line":268},"23":{"loc":{"start":{"line":280,"column":8},"end":{"line":281,"column":21}},"type":"if","locations":[{"start":{"line":280,"column":8},"end":{"line":281,"column":21}},{"start":{"line":280,"column":8},"end":{"line":281,"column":21}}],"line":280},"24":{"loc":{"start":{"line":292,"column":8},"end":{"line":293,"column":21}},"type":"if","locations":[{"start":{"line":292,"column":8},"end":{"line":293,"column":21}},{"start":{"line":292,"column":8},"end":{"line":293,"column":21}}],"line":292},"25":{"loc":{"start":{"line":304,"column":8},"end":{"line":305,"column":29}},"type":"if","locations":[{"start":{"line":304,"column":8},"end":{"line":305,"column":29}},{"start":{"line":304,"column":8},"end":{"line":305,"column":29}}],"line":304},"26":{"loc":{"start":{"line":306,"column":20},"end":{"line":306,"column":100}},"type":"binary-expr","locations":[{"start":{"line":306,"column":20},"end":{"line":306,"column":93}},{"start":{"line":306,"column":97},"end":{"line":306,"column":100}}],"line":306},"27":{"loc":{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},"type":"if","locations":[{"start":{"line":318,"column":8},"end":{"line":320,"column":9}},{"start":{"line":318,"column":8},"end":{"line":320,"column":9}}],"line":318},"28":{"loc":{"start":{"line":335,"column":12},"end":{"line":337,"column":13}},"type":"if","locations":[{"start":{"line":335,"column":12},"end":{"line":337,"column":13}},{"start":{"line":335,"column":12},"end":{"line":337,"column":13}}],"line":335}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":70,"6":70,"7":70,"8":70,"9":8,"10":2,"11":6,"12":2,"13":4,"14":2,"15":2,"16":9,"17":1,"18":3,"19":2,"20":6,"21":32,"22":7,"23":10,"24":7,"25":10,"26":9,"27":6,"28":3,"29":1,"30":2,"31":2,"32":2,"33":2,"34":3,"35":1,"36":2,"37":2,"38":2,"39":2,"40":8,"41":8,"42":2,"43":2,"44":6,"45":2,"46":2,"47":2,"48":2,"49":2,"50":2,"51":18,"52":17,"53":2,"54":2,"55":15,"56":5,"57":5,"58":3,"59":1,"60":2,"61":5,"62":5,"63":3,"64":1,"65":2,"66":5,"67":5,"68":3,"69":1,"70":2,"71":34,"72":1,"73":1,"74":33,"75":26,"76":7,"77":19,"78":19,"79":19,"80":19,"81":19,"82":7,"83":2,"84":2,"85":5,"86":5,"87":5,"88":5,"89":5,"90":6,"91":1,"92":5,"93":2,"94":1,"95":1,"96":1,"97":1,"98":3,"99":1,"100":2,"101":2,"102":2,"103":0,"104":0,"105":0,"106":0,"107":0,"108":0,"109":0,"110":8,"111":8,"112":2,"113":6,"114":6,"115":6,"116":6,"117":10,"118":10,"119":1,"120":9,"121":9,"122":9,"123":9,"124":9,"125":66,"126":10,"127":56,"128":56,"129":56,"130":56,"131":15,"132":15,"133":15,"134":72,"135":15,"136":1},"f":{"0":1,"1":70,"2":8,"3":9,"4":1,"5":3,"6":2,"7":6,"8":32,"9":7,"10":10,"11":7,"12":10,"13":9,"14":6,"15":3,"16":3,"17":8,"18":18,"19":34,"20":6,"21":0,"22":8,"23":10,"24":66,"25":15},"b":{"0":[1,1,1],"1":[0,1],"2":[1,1],"3":[2,6],"4":[2,4],"5":[2,2],"6":[1,2],"7":[1,2],"8":[2,6],"9":[2,2,2],"10":[2,15],"11":[5,5,5],"12":[1,2],"13":[1,2],"14":[1,2],"15":[1,33],"16":[26,7],"17":[7,19],"18":[2,5],"19":[1,5],"20":[2,3],"21":[1,1],"22":[1,2],"23":[0,0],"24":[2,6],"25":[1,9],"26":[9,0],"27":[10,56],"28":[15,57]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferReader.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferReader.ts"],"names":[],"mappings":"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","sourcesContent":["import assert from \"assert\";\n\n/**\n * BufferReader class is used to simplify reading information from a Buffer\n */\nexport class BufferReader {\n    /**\n     * Returns the number of bytes that will be used to encode\n     * a BigSize number. BigSize is defined in Lightning Network BOLT 07\n     */\n    public static bigSizeBytes(num: bigint): number {\n        if (num < BigInt(0xfd)) return 1;\n        if (num < BigInt(0x10000)) return 3;\n        if (num < BigInt(0x100000000)) return 5;\n        else return 9;\n    }\n\n    private _buffer: Buffer;\n    private _position: number;\n    private _lastReadBytes: number;\n\n    /**\n     * Constructs a reader from the supplied Buffer\n     */\n    constructor(buffer: Buffer) {\n        assert(Buffer.isBuffer(buffer), \"Requires a buffer\");\n        this._buffer = buffer;\n        this._position = 0;\n        this._lastReadBytes = 0;\n    }\n\n    /**\n     * Gets or sets the current position of the cursor in the buffer\n     */\n    public get position(): number {\n        return this._position;\n    }\n\n    public set position(val: number) {\n        this._position = val;\n    }\n\n    /**\n     * Gets if the cursor is at the end of file.\n     */\n    public get eof(): boolean {\n        return this._position === this._buffer.length;\n    }\n\n    /**\n     * Gets the underlying buffer that the cursor\n     * is reading from.\n     */\n    public get buffer(): Buffer {\n        return this._buffer;\n    }\n\n    /**\n     * Number of bytes read in last operation executed on the cursor.\n     * Especially useful for operations that return variable length of\n     * results such as readBytes or readVarUint.\n     */\n    public get lastReadBytes(): number {\n        return this._lastReadBytes;\n    }\n\n    /**\n     * Read a UInt8 number\n     */\n    public readUInt8(): number {\n        return this._readStandard(this.readUInt8.name, 1);\n    }\n\n    /**\n     * Read a UInt16 number as little-endian\n     */\n    public readUInt16LE(): number {\n        return this._readStandard(this.readUInt16LE.name, 2);\n    }\n\n    /**\n     * Read a UInt16 number as big-endian\n     */\n    public readUInt16BE(): number {\n        return this._readStandard(this.readUInt16BE.name, 2);\n    }\n\n    /**\n     * Read a UInt32 number as little-endian\n     */\n    public readUInt32LE(): number {\n        return this._readStandard(this.readUInt32LE.name, 4);\n    }\n\n    /**\n     * Read a UInt32 number as big-endian\n     */\n    public readUInt32BE(): number {\n        return this._readStandard(this.readUInt32BE.name, 4);\n    }\n\n    /**\n     * Read a UInt64 number as big-endian\n     */\n    public readUInt64BE(): bigint {\n        return BigInt(\"0x\" + this.readBytes(8).toString(\"hex\"));\n    }\n\n    /**\n     * Read a UInt64 number as little-endian\n     */\n    public readUInt64LE(): bigint {\n        return BigInt(\n            \"0x\" +\n                this.readBytes(8)\n                    .reverse()\n                    .toString(\"hex\"),\n        );\n    }\n\n    /**\n     * Reads a UIntLE value from the buffer for the given length.\n     * @param len\n     * @returns\n     */\n    public readUIntLE(len: number): number {\n        if (this._position + len > this._buffer.length) {\n            throw new RangeError(\"Index out of range\");\n        }\n        const result: number = this._buffer.readUIntLE(this._position, len);\n        this._position += len;\n        this._lastReadBytes = len;\n        return result;\n    }\n\n    /**\n     * Reads a UIntBE value from the buffer for the given length.\n     * @param len\n     * @returns\n     */\n    public readUIntBE(len: number): number {\n        if (this._position + len > this._buffer.length) {\n            throw new RangeError(\"Index out of range\");\n        }\n        const result: number = this._buffer.readUIntBE(this._position, len);\n        this._position += len;\n        this._lastReadBytes = len;\n        return result;\n    }\n\n    /**\n     * Reads a variable length unsigned integer as specified in the protocol\n     * documentation and aways returns a BN to maintain a consistant call\n     * signature.\n     *\n     * @remarks\n     * Specified in:\n     * https://en.bitcoin.it/wiki/Protocol_documentation#Variable_length_integer\n     *\n     * Reads the first byte and determines the length of the remaining integer.\n     * < 0xfd = 1 byte number\n     *   0xfd = 2 byte number (3 bytes total)\n     *   0xfe = 4 byte number (5 bytes total)\n     *   0xff = 8 byte number (9 bytes total)\n     */\n    public readVarUint(): bigint {\n        const size = this.readUInt8();\n        if (size < 0xfd) {\n            this._lastReadBytes = 1;\n            return BigInt(size);\n        }\n        switch (size) {\n            case 0xfd:\n                this._lastReadBytes = 3;\n                return BigInt(this.readUInt16LE());\n            case 0xfe:\n                this._lastReadBytes = 5;\n                return BigInt(this.readUInt32LE());\n            case 0xff:\n                this._lastReadBytes = 9;\n                return this.readUInt64LE();\n        }\n    }\n\n    /**\n     * Reads a variable length unsigned integer as specified in the Lightning Network\n     * protocol documentation and always returns a BigInt to maintain a consistent\n     * call signature.\n     *\n     * @remarks\n     * Specified in:\n     * https://github.com/lightningnetwork/lightning-rfc/blob/master/01-messaging.md#appendix-a-bigsize-test-vectors\n     *\n     * < 0xfd = 1 byte number\n     *   0xfd = 2 byte number (3 bytes total)\n     *   0xfe = 4 byte number (5 bytes total)\n     *   0xff = 8 byte number (9 bytes total)\n     */\n    public readBigSize(): bigint {\n        const size = this.readUInt8();\n        if (size < 0xfd) {\n            this._lastReadBytes = 1;\n            return BigInt(size);\n        }\n        switch (size) {\n            case 0xfd: {\n                this._lastReadBytes = 3;\n                const val = this.readUInt16BE();\n                if (val < 0xfd) throw new Error(\"decoded varint is not canonical\");\n                return BigInt(val);\n            }\n            case 0xfe: {\n                this._lastReadBytes = 5;\n                const val = this.readUInt32BE();\n                if (val < 0x10000) throw new Error(\"decoded varint is not canonical\");\n                return BigInt(val);\n            }\n            case 0xff: {\n                this._lastReadBytes = 9;\n                const val = this.readUInt64BE();\n                if (val < BigInt(0x100000000)) throw new Error(\"decoded varint is not canonical\");\n                return val;\n            }\n        }\n    }\n\n    /**\n     * Read bytes from the buffer into a new Buffer. Unlike the default\n     * slice method, the values do not point to the same memory location\n     * as the source buffer. The values are copied to a new buffer.\n     *\n     * @param len optional number of bytes to read, returns\n     * all remaining bytes when omitted\n     */\n    public readBytes(len?: number): Buffer {\n        if (len === 0) {\n            this._lastReadBytes = 0;\n            return Buffer.alloc(0);\n        } else if (len > 0) {\n            if (this._position + len > this._buffer.length) {\n                throw new RangeError(\"Index out of range\");\n            }\n            const slice = this._buffer.slice(this._position, this._position + len);\n            const result = Buffer.alloc(slice.length, slice);\n            this._position += len;\n            this._lastReadBytes = len;\n            return result;\n        } else {\n            if (this._position === this._buffer.length) {\n                this._lastReadBytes = 0;\n                return Buffer.alloc(0);\n            }\n            const slice = this._buffer.slice(this._position);\n            const result = Buffer.alloc(slice.length, slice);\n            this._position = this._buffer.length;\n            this._lastReadBytes = result.length;\n            return result;\n        }\n    }\n\n    /**\n     * Reads bytes from the buffer at the current position without\n     * moving the cursor.\n     * @param len optional number of bytes to read\n     */\n    public peakBytes(len?: number): Buffer {\n        if (len === 0) {\n            return Buffer.alloc(0);\n        } else if (len > 0) {\n            if (this._position + len > this._buffer.length) {\n                throw new RangeError(\"Index out of range\");\n            }\n            const slice = this._buffer.slice(this._position, this._position + len);\n            const result = Buffer.alloc(slice.length, slice);\n            return result;\n        } else {\n            if (this._position === this._buffer.length) throw new RangeError(\"Index out of range\");\n            const slice = this._buffer.slice(this._position);\n            const result = Buffer.alloc(slice.length, slice);\n            return result;\n        }\n    }\n\n    /**\n     * TLV 0 to 2 byte unsigned integer encoded in big-endian.\n     */\n    public readTUInt16(): number {\n        const size = Math.min(2, this._buffer.length - this._position);\n        if (size === 0) return 0;\n        const val = this._buffer.readUIntBE(this._position, size);\n        this._assertMinimalTUInt(BigInt(val), size);\n        this._position += size;\n        return val;\n    }\n\n    /**\n     * TLV 0 to 4 byte unsigned integer encoded in big-endian.\n     */\n    public readTUInt32(): number {\n        const size = Math.min(4, this._buffer.length - this._position);\n        if (size === 0) return 0;\n        const val = this._buffer.readUIntBE(this._position, size);\n        this._assertMinimalTUInt(BigInt(val), size);\n        this._position += size;\n        return val;\n    }\n\n    /**\n     * TLV 0 to 8 byte unsigned integer encoded in big-endian.\n     */\n    public readTUInt64(): bigint {\n        const size = Math.min(8, this._buffer.length - this._position);\n        if (size === 0) return BigInt(0);\n        const hex =\n            this._buffer.slice(this._position, this._position + size).toString(\"hex\") || \"0\";\n        const val = BigInt(\"0x\" + hex);\n        this._assertMinimalTUInt(val, size);\n        this._position += size;\n        return val;\n    }\n\n    /**\n     * Helper for reading off buffer using built-in read functions\n     * @param fn name of function\n     * @param len length to read\n     */\n    private _readStandard(fn: string, len: number): number {\n        if (this._position + len > this._buffer.length) {\n            throw new RangeError(\"Index out of range\");\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-call\n        const result: number = this._buffer[fn](this._position);\n        this._position += len;\n        this._lastReadBytes = len;\n        return result;\n    }\n\n    /**\n     * Ensures the TUInt value is minimally encoded\n     * @param num\n     * @param bytes\n     */\n    private _assertMinimalTUInt(num: bigint, bytes: number) {\n        const msg = \"TUInt not minimal\";\n        for (let i = 0; i < 9; i++) {\n            if (num < BigInt(\"0x1\" + \"\".padStart(i * 2, \"0\"))) {\n                return assert.equal(bytes, i, msg);\n            }\n        }\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3320ee92959748c160061f3030c4c5a9004e6a42"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferWriter.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferWriter.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":20},"end":{"line":4,"column":42}},"3":{"start":{"line":21,"column":8},"end":{"line":21,"column":27}},"4":{"start":{"line":22,"column":8},"end":{"line":22,"column":31}},"5":{"start":{"line":23,"column":8},"end":{"line":23,"column":49}},"6":{"start":{"line":29,"column":8},"end":{"line":29,"column":30}},"7":{"start":{"line":37,"column":8},"end":{"line":40,"column":57}},"8":{"start":{"line":38,"column":12},"end":{"line":38,"column":32}},"9":{"start":{"line":40,"column":12},"end":{"line":40,"column":57}},"10":{"start":{"line":48,"column":8},"end":{"line":48,"column":47}},"11":{"start":{"line":55,"column":8},"end":{"line":55,"column":58}},"12":{"start":{"line":62,"column":8},"end":{"line":62,"column":61}},"13":{"start":{"line":69,"column":8},"end":{"line":69,"column":61}},"14":{"start":{"line":76,"column":8},"end":{"line":76,"column":61}},"15":{"start":{"line":83,"column":8},"end":{"line":83,"column":61}},"16":{"start":{"line":90,"column":20},"end":{"line":90,"column":33}},"17":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"18":{"start":{"line":92,"column":12},"end":{"line":92,"column":148}},"19":{"start":{"line":94,"column":20},"end":{"line":94,"column":74}},"20":{"start":{"line":95,"column":8},"end":{"line":95,"column":39}},"21":{"start":{"line":102,"column":20},"end":{"line":102,"column":33}},"22":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"23":{"start":{"line":104,"column":12},"end":{"line":104,"column":148}},"24":{"start":{"line":106,"column":20},"end":{"line":106,"column":74}},"25":{"start":{"line":107,"column":8},"end":{"line":107,"column":29}},"26":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"27":{"start":{"line":116,"column":12},"end":{"line":116,"column":76}},"28":{"start":{"line":118,"column":8},"end":{"line":118,"column":26}},"29":{"start":{"line":119,"column":8},"end":{"line":119,"column":59}},"30":{"start":{"line":120,"column":8},"end":{"line":120,"column":30}},"31":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"32":{"start":{"line":129,"column":12},"end":{"line":129,"column":76}},"33":{"start":{"line":131,"column":8},"end":{"line":131,"column":26}},"34":{"start":{"line":132,"column":8},"end":{"line":132,"column":59}},"35":{"start":{"line":133,"column":8},"end":{"line":133,"column":30}},"36":{"start":{"line":140,"column":8},"end":{"line":141,"column":19}},"37":{"start":{"line":141,"column":12},"end":{"line":141,"column":19}},"38":{"start":{"line":142,"column":8},"end":{"line":142,"column":36}},"39":{"start":{"line":143,"column":8},"end":{"line":143,"column":50}},"40":{"start":{"line":144,"column":8},"end":{"line":144,"column":40}},"41":{"start":{"line":156,"column":20},"end":{"line":156,"column":31}},"42":{"start":{"line":157,"column":8},"end":{"line":171,"column":9}},"43":{"start":{"line":158,"column":12},"end":{"line":158,"column":41}},"44":{"start":{"line":160,"column":13},"end":{"line":171,"column":9}},"45":{"start":{"line":161,"column":12},"end":{"line":161,"column":34}},"46":{"start":{"line":162,"column":12},"end":{"line":162,"column":44}},"47":{"start":{"line":164,"column":13},"end":{"line":171,"column":9}},"48":{"start":{"line":165,"column":12},"end":{"line":165,"column":34}},"49":{"start":{"line":166,"column":12},"end":{"line":166,"column":44}},"50":{"start":{"line":169,"column":12},"end":{"line":169,"column":34}},"51":{"start":{"line":170,"column":12},"end":{"line":170,"column":36}},"52":{"start":{"line":188,"column":20},"end":{"line":188,"column":31}},"53":{"start":{"line":189,"column":8},"end":{"line":203,"column":9}},"54":{"start":{"line":190,"column":12},"end":{"line":190,"column":41}},"55":{"start":{"line":192,"column":13},"end":{"line":203,"column":9}},"56":{"start":{"line":193,"column":12},"end":{"line":193,"column":34}},"57":{"start":{"line":194,"column":12},"end":{"line":194,"column":44}},"58":{"start":{"line":196,"column":13},"end":{"line":203,"column":9}},"59":{"start":{"line":197,"column":12},"end":{"line":197,"column":34}},"60":{"start":{"line":198,"column":12},"end":{"line":198,"column":44}},"61":{"start":{"line":201,"column":12},"end":{"line":201,"column":34}},"62":{"start":{"line":202,"column":12},"end":{"line":202,"column":36}},"63":{"start":{"line":210,"column":8},"end":{"line":211,"column":19}},"64":{"start":{"line":211,"column":12},"end":{"line":211,"column":19}},"65":{"start":{"line":212,"column":21},"end":{"line":212,"column":39}},"66":{"start":{"line":213,"column":8},"end":{"line":213,"column":27}},"67":{"start":{"line":214,"column":8},"end":{"line":214,"column":60}},"68":{"start":{"line":215,"column":8},"end":{"line":215,"column":31}},"69":{"start":{"line":221,"column":8},"end":{"line":222,"column":19}},"70":{"start":{"line":222,"column":12},"end":{"line":222,"column":19}},"71":{"start":{"line":223,"column":21},"end":{"line":223,"column":79}},"72":{"start":{"line":224,"column":8},"end":{"line":224,"column":27}},"73":{"start":{"line":225,"column":8},"end":{"line":225,"column":60}},"74":{"start":{"line":226,"column":8},"end":{"line":226,"column":31}},"75":{"start":{"line":232,"column":8},"end":{"line":233,"column":19}},"76":{"start":{"line":233,"column":12},"end":{"line":233,"column":19}},"77":{"start":{"line":234,"column":24},"end":{"line":234,"column":40}},"78":{"start":{"line":235,"column":8},"end":{"line":236,"column":40}},"79":{"start":{"line":236,"column":12},"end":{"line":236,"column":40}},"80":{"start":{"line":237,"column":20},"end":{"line":237,"column":49}},"81":{"start":{"line":238,"column":8},"end":{"line":238,"column":29}},"82":{"start":{"line":246,"column":25},"end":{"line":246,"column":48}},"83":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"84":{"start":{"line":249,"column":12},"end":{"line":249,"column":49}},"85":{"start":{"line":252,"column":8},"end":{"line":262,"column":9}},"86":{"start":{"line":256,"column":27},"end":{"line":256,"column":62}},"87":{"start":{"line":257,"column":27},"end":{"line":257,"column":47}},"88":{"start":{"line":260,"column":12},"end":{"line":260,"column":38}},"89":{"start":{"line":261,"column":12},"end":{"line":261,"column":34}},"90":{"start":{"line":272,"column":8},"end":{"line":272,"column":26}},"91":{"start":{"line":274,"column":8},"end":{"line":274,"column":46}},"92":{"start":{"line":275,"column":8},"end":{"line":275,"column":30}},"93":{"start":{"line":278,"column":0},"end":{"line":278,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":20,"column":4},"end":{"line":20,"column":5}},"loc":{"start":{"line":20,"column":24},"end":{"line":24,"column":5}},"line":20},"1":{"name":"(anonymous_1)","decl":{"start":{"line":28,"column":4},"end":{"line":28,"column":5}},"loc":{"start":{"line":28,"column":15},"end":{"line":30,"column":5}},"line":28},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":4},"end":{"line":36,"column":5}},"loc":{"start":{"line":36,"column":15},"end":{"line":41,"column":5}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":47,"column":4},"end":{"line":47,"column":5}},"loc":{"start":{"line":47,"column":12},"end":{"line":49,"column":5}},"line":47},"4":{"name":"(anonymous_4)","decl":{"start":{"line":54,"column":4},"end":{"line":54,"column":5}},"loc":{"start":{"line":54,"column":20},"end":{"line":56,"column":5}},"line":54},"5":{"name":"(anonymous_5)","decl":{"start":{"line":61,"column":4},"end":{"line":61,"column":5}},"loc":{"start":{"line":61,"column":23},"end":{"line":63,"column":5}},"line":61},"6":{"name":"(anonymous_6)","decl":{"start":{"line":68,"column":4},"end":{"line":68,"column":5}},"loc":{"start":{"line":68,"column":23},"end":{"line":70,"column":5}},"line":68},"7":{"name":"(anonymous_7)","decl":{"start":{"line":75,"column":4},"end":{"line":75,"column":5}},"loc":{"start":{"line":75,"column":23},"end":{"line":77,"column":5}},"line":75},"8":{"name":"(anonymous_8)","decl":{"start":{"line":82,"column":4},"end":{"line":82,"column":5}},"loc":{"start":{"line":82,"column":23},"end":{"line":84,"column":5}},"line":82},"9":{"name":"(anonymous_9)","decl":{"start":{"line":89,"column":4},"end":{"line":89,"column":5}},"loc":{"start":{"line":89,"column":25},"end":{"line":96,"column":5}},"line":89},"10":{"name":"(anonymous_10)","decl":{"start":{"line":101,"column":4},"end":{"line":101,"column":5}},"loc":{"start":{"line":101,"column":25},"end":{"line":108,"column":5}},"line":101},"11":{"name":"(anonymous_11)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":26},"end":{"line":121,"column":5}},"line":114},"12":{"name":"(anonymous_12)","decl":{"start":{"line":127,"column":4},"end":{"line":127,"column":5}},"loc":{"start":{"line":127,"column":26},"end":{"line":134,"column":5}},"line":127},"13":{"name":"(anonymous_13)","decl":{"start":{"line":139,"column":4},"end":{"line":139,"column":5}},"loc":{"start":{"line":139,"column":23},"end":{"line":145,"column":5}},"line":139},"14":{"name":"(anonymous_14)","decl":{"start":{"line":155,"column":4},"end":{"line":155,"column":5}},"loc":{"start":{"line":155,"column":21},"end":{"line":172,"column":5}},"line":155},"15":{"name":"(anonymous_15)","decl":{"start":{"line":187,"column":4},"end":{"line":187,"column":5}},"loc":{"start":{"line":187,"column":22},"end":{"line":204,"column":5}},"line":187},"16":{"name":"(anonymous_16)","decl":{"start":{"line":209,"column":4},"end":{"line":209,"column":5}},"loc":{"start":{"line":209,"column":22},"end":{"line":216,"column":5}},"line":209},"17":{"name":"(anonymous_17)","decl":{"start":{"line":220,"column":4},"end":{"line":220,"column":5}},"loc":{"start":{"line":220,"column":22},"end":{"line":227,"column":5}},"line":220},"18":{"name":"(anonymous_18)","decl":{"start":{"line":231,"column":4},"end":{"line":231,"column":5}},"loc":{"start":{"line":231,"column":22},"end":{"line":239,"column":5}},"line":231},"19":{"name":"(anonymous_19)","decl":{"start":{"line":245,"column":4},"end":{"line":245,"column":5}},"loc":{"start":{"line":245,"column":20},"end":{"line":263,"column":5}},"line":245},"20":{"name":"(anonymous_20)","decl":{"start":{"line":271,"column":4},"end":{"line":271,"column":5}},"loc":{"start":{"line":271,"column":33},"end":{"line":276,"column":5}},"line":271}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":23},"end":{"line":23,"column":48}},"type":"binary-expr","locations":[{"start":{"line":23,"column":23},"end":{"line":23,"column":29}},{"start":{"line":23,"column":33},"end":{"line":23,"column":48}}],"line":23},"1":{"loc":{"start":{"line":37,"column":8},"end":{"line":40,"column":57}},"type":"if","locations":[{"start":{"line":37,"column":8},"end":{"line":40,"column":57}},{"start":{"line":37,"column":8},"end":{"line":40,"column":57}}],"line":37},"2":{"loc":{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},"type":"if","locations":[{"start":{"line":91,"column":8},"end":{"line":93,"column":9}},{"start":{"line":91,"column":8},"end":{"line":93,"column":9}}],"line":91},"3":{"loc":{"start":{"line":91,"column":12},"end":{"line":91,"column":53}},"type":"binary-expr","locations":[{"start":{"line":91,"column":12},"end":{"line":91,"column":19}},{"start":{"line":91,"column":23},"end":{"line":91,"column":53}}],"line":91},"4":{"loc":{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},"type":"if","locations":[{"start":{"line":103,"column":8},"end":{"line":105,"column":9}},{"start":{"line":103,"column":8},"end":{"line":105,"column":9}}],"line":103},"5":{"loc":{"start":{"line":103,"column":12},"end":{"line":103,"column":53}},"type":"binary-expr","locations":[{"start":{"line":103,"column":12},"end":{"line":103,"column":19}},{"start":{"line":103,"column":23},"end":{"line":103,"column":53}}],"line":103},"6":{"loc":{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},"type":"if","locations":[{"start":{"line":115,"column":8},"end":{"line":117,"column":9}},{"start":{"line":115,"column":8},"end":{"line":117,"column":9}}],"line":115},"7":{"loc":{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},"type":"if","locations":[{"start":{"line":128,"column":8},"end":{"line":130,"column":9}},{"start":{"line":128,"column":8},"end":{"line":130,"column":9}}],"line":128},"8":{"loc":{"start":{"line":140,"column":8},"end":{"line":141,"column":19}},"type":"if","locations":[{"start":{"line":140,"column":8},"end":{"line":141,"column":19}},{"start":{"line":140,"column":8},"end":{"line":141,"column":19}}],"line":140},"9":{"loc":{"start":{"line":140,"column":12},"end":{"line":140,"column":37}},"type":"binary-expr","locations":[{"start":{"line":140,"column":12},"end":{"line":140,"column":19}},{"start":{"line":140,"column":23},"end":{"line":140,"column":37}}],"line":140},"10":{"loc":{"start":{"line":157,"column":8},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":157,"column":8},"end":{"line":171,"column":9}},{"start":{"line":157,"column":8},"end":{"line":171,"column":9}}],"line":157},"11":{"loc":{"start":{"line":160,"column":13},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":160,"column":13},"end":{"line":171,"column":9}},{"start":{"line":160,"column":13},"end":{"line":171,"column":9}}],"line":160},"12":{"loc":{"start":{"line":164,"column":13},"end":{"line":171,"column":9}},"type":"if","locations":[{"start":{"line":164,"column":13},"end":{"line":171,"column":9}},{"start":{"line":164,"column":13},"end":{"line":171,"column":9}}],"line":164},"13":{"loc":{"start":{"line":189,"column":8},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":189,"column":8},"end":{"line":203,"column":9}},{"start":{"line":189,"column":8},"end":{"line":203,"column":9}}],"line":189},"14":{"loc":{"start":{"line":192,"column":13},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":192,"column":13},"end":{"line":203,"column":9}},{"start":{"line":192,"column":13},"end":{"line":203,"column":9}}],"line":192},"15":{"loc":{"start":{"line":196,"column":13},"end":{"line":203,"column":9}},"type":"if","locations":[{"start":{"line":196,"column":13},"end":{"line":203,"column":9}},{"start":{"line":196,"column":13},"end":{"line":203,"column":9}}],"line":196},"16":{"loc":{"start":{"line":210,"column":8},"end":{"line":211,"column":19}},"type":"if","locations":[{"start":{"line":210,"column":8},"end":{"line":211,"column":19}},{"start":{"line":210,"column":8},"end":{"line":211,"column":19}}],"line":210},"17":{"loc":{"start":{"line":212,"column":21},"end":{"line":212,"column":39}},"type":"cond-expr","locations":[{"start":{"line":212,"column":34},"end":{"line":212,"column":35}},{"start":{"line":212,"column":38},"end":{"line":212,"column":39}}],"line":212},"18":{"loc":{"start":{"line":221,"column":8},"end":{"line":222,"column":19}},"type":"if","locations":[{"start":{"line":221,"column":8},"end":{"line":222,"column":19}},{"start":{"line":221,"column":8},"end":{"line":222,"column":19}}],"line":221},"19":{"loc":{"start":{"line":223,"column":21},"end":{"line":223,"column":79}},"type":"cond-expr","locations":[{"start":{"line":223,"column":38},"end":{"line":223,"column":39}},{"start":{"line":223,"column":42},"end":{"line":223,"column":79}}],"line":223},"20":{"loc":{"start":{"line":223,"column":42},"end":{"line":223,"column":79}},"type":"cond-expr","locations":[{"start":{"line":223,"column":57},"end":{"line":223,"column":58}},{"start":{"line":223,"column":61},"end":{"line":223,"column":79}}],"line":223},"21":{"loc":{"start":{"line":223,"column":61},"end":{"line":223,"column":79}},"type":"cond-expr","locations":[{"start":{"line":223,"column":74},"end":{"line":223,"column":75}},{"start":{"line":223,"column":78},"end":{"line":223,"column":79}}],"line":223},"22":{"loc":{"start":{"line":232,"column":8},"end":{"line":233,"column":19}},"type":"if","locations":[{"start":{"line":232,"column":8},"end":{"line":233,"column":19}},{"start":{"line":232,"column":8},"end":{"line":233,"column":19}}],"line":232},"23":{"loc":{"start":{"line":235,"column":8},"end":{"line":236,"column":40}},"type":"if","locations":[{"start":{"line":235,"column":8},"end":{"line":236,"column":40}},{"start":{"line":235,"column":8},"end":{"line":236,"column":40}}],"line":235},"24":{"loc":{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},"type":"if","locations":[{"start":{"line":248,"column":8},"end":{"line":250,"column":9}},{"start":{"line":248,"column":8},"end":{"line":250,"column":9}}],"line":248},"25":{"loc":{"start":{"line":248,"column":12},"end":{"line":248,"column":57}},"type":"binary-expr","locations":[{"start":{"line":248,"column":12},"end":{"line":248,"column":23}},{"start":{"line":248,"column":27},"end":{"line":248,"column":57}}],"line":248},"26":{"loc":{"start":{"line":252,"column":8},"end":{"line":262,"column":9}},"type":"if","locations":[{"start":{"line":252,"column":8},"end":{"line":262,"column":9}},{"start":{"line":252,"column":8},"end":{"line":262,"column":9}}],"line":252}},"s":{"0":1,"1":1,"2":1,"3":66,"4":66,"5":66,"6":0,"7":78,"8":6,"9":72,"10":4,"11":21,"12":6,"13":6,"14":6,"15":6,"16":8,"17":8,"18":2,"19":6,"20":6,"21":8,"22":8,"23":2,"24":6,"25":6,"26":4,"27":1,"28":3,"29":2,"30":2,"31":4,"32":1,"33":3,"34":2,"35":2,"36":36,"37":3,"38":33,"39":30,"40":30,"41":8,"42":8,"43":2,"44":6,"45":2,"46":2,"47":4,"48":2,"49":2,"50":2,"51":2,"52":8,"53":8,"54":2,"55":6,"56":2,"57":2,"58":4,"59":2,"60":2,"61":2,"62":2,"63":4,"64":1,"65":3,"66":3,"67":3,"68":3,"69":9,"70":1,"71":8,"72":8,"73":8,"74":8,"75":17,"76":1,"77":16,"78":16,"79":8,"80":16,"81":16,"82":95,"83":95,"84":10,"85":85,"86":81,"87":81,"88":81,"89":81,"90":45,"91":40,"92":40,"93":1},"f":{"0":66,"1":0,"2":78,"3":4,"4":21,"5":6,"6":6,"7":6,"8":6,"9":8,"10":8,"11":4,"12":4,"13":36,"14":8,"15":8,"16":4,"17":9,"18":17,"19":95,"20":45},"b":{"0":[66,56],"1":[6,72],"2":[2,6],"3":[8,7],"4":[2,6],"5":[8,7],"6":[1,3],"7":[1,3],"8":[3,33],"9":[36,35],"10":[2,6],"11":[2,4],"12":[2,2],"13":[2,6],"14":[2,4],"15":[2,2],"16":[1,3],"17":[1,2],"18":[1,8],"19":[2,6],"20":[2,4],"21":[2,2],"22":[1,16],"23":[8,8],"24":[10,85],"25":[95,14],"26":[81,4]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferWriter.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/BufferWriter.ts"],"names":[],"mappings":";;;AAAA,2CAAwC;AAExC;;;;GAIG;AACH,MAAa,YAAY;IAKrB;;;;;;;;OAQG;IACH,YAAY,MAAe;QACvB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,MAAM,CAAC;QACvB,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;IAC7C,CAAC;IAED;;OAEG;IACH,IAAW,IAAI;QACX,OAAO,IAAI,CAAC,SAAS,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACI,QAAQ;QACX,IAAI,IAAI,CAAC,MAAM;YAAE,OAAO,IAAI,CAAC,OAAO,CAAC;;YAChC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;IACtD,CAAC;IAED;;;;OAIG;IACI,KAAK;QACR,OAAO,IAAI,CAAC,QAAQ,EAAE,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC3C,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,GAAW;QACzB,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACtD,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,GAAW;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,GAAW;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,GAAW;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,GAAW;QAC5B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;IACzD,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,KAAsB;QACvC,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE;YAC3C,MAAM,IAAI,UAAU,CAChB,+FAA+F,KAAK,CAAC,QAAQ,EAAE,EAAE,CACpH,CAAC;SACL;QACD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACnC,CAAC;IAED;;;OAGG;IACI,aAAa,CAAC,KAAsB;QACvC,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC;QAC1B,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,CAAC,CAAC,IAAI,MAAM,CAAC,EAAE,CAAC,EAAE;YAC3C,MAAM,IAAI,UAAU,CAChB,+FAA+F,KAAK,CAAC,QAAQ,EAAE,EAAE,CACpH,CAAC;SACL;QACD,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,EAAE,EAAE,GAAG,CAAC,EAAE,KAAK,CAAC,CAAC;QACnE,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,GAAW,EAAE,GAAW;QACvC,IAAI,qBAAS,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;YACtB,MAAM,IAAI,UAAU,CAAC,SAAS,GAAG,wBAAwB,GAAG,EAAE,CAAC,CAAC;SACnE;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC;IAC1B,CAAC;IAED;;;;OAIG;IACI,WAAW,CAAC,GAAW,EAAE,GAAW;QACvC,IAAI,qBAAS,CAAC,GAAG,CAAC,GAAG,GAAG,EAAE;YACtB,MAAM,IAAI,UAAU,CAAC,SAAS,GAAG,wBAAwB,GAAG,EAAE,CAAC,CAAC;SACnE;QACD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,GAAG,CAAC,CAAC;QACnD,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC;IAC1B,CAAC;IAED;;;OAGG;IACI,UAAU,CAAC,MAAc;QAC5B,IAAI,CAAC,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM;YAAE,OAAO;QACtC,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAC5B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC1C,IAAI,CAAC,SAAS,IAAI,MAAM,CAAC,MAAM,CAAC;IACpC,CAAC;IAED;;;;;;;;OAQG;IACI,WAAW,CAAC,GAAoB;QACnC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;aAAM,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;aAAM,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;IAED;;;;;;;;;;;;;OAaG;IACI,YAAY,CAAC,GAAoB;QACpC,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;QACxB,IAAI,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,EAAE;YACpB,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SAChC;aAAM,IAAI,GAAG,GAAG,MAAM,CAAC,OAAO,CAAC,EAAE;YAC9B,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;aAAM,IAAI,GAAG,GAAG,MAAM,CAAC,WAAW,CAAC,EAAE;YAClC,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC;SACnC;aAAM;YACH,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;YACtB,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;SAC3B;IACL,CAAC;IAED;;;OAGG;IACI,YAAY,CAAC,GAAW;QAC3B,IAAI,GAAG,KAAK,CAAC;YAAE,OAAO;QACtB,MAAM,IAAI,GAAG,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,YAAY,CAAC,GAAW;QAC3B,IAAI,GAAG,KAAK,CAAC;YAAE,OAAO;QACtB,MAAM,IAAI,GAAG,GAAG,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACnB,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;QACpD,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC;IAC3B,CAAC;IAED;;OAEG;IACI,YAAY,CAAC,GAAW;QAC3B,IAAI,GAAG,KAAK,MAAM,CAAC,CAAC,CAAC;YAAE,OAAO;QAC9B,IAAI,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;QACjC,IAAI,SAAS,CAAC,MAAM,GAAG,CAAC,KAAK,CAAC;YAAE,SAAS,GAAG,GAAG,GAAG,SAAS,CAAC;QAC5D,MAAM,GAAG,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;QAC1C,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC;IACzB,CAAC;IAED;;;;OAIG;IACK,OAAO,CAAC,MAAc;QAC1B,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC;QAEzC,oDAAoD;QACpD,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,EAAE;YAC/C,MAAM,IAAI,UAAU,CAAC,cAAc,CAAC,CAAC;SACxC;QAED,qEAAqE;QACrE,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,QAAQ,EAAE;YAChC,iEAAiE;YACjE,mEAAmE;YACnE,mBAAmB;YACnB,MAAM,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;YACnD,MAAM,MAAM,GAAG,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;YAEpC,kEAAkE;YAClE,SAAS;YACT,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;YAC1B,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC;SACzB;IACL,CAAC;IAED;;;;;;OAMG;IACK,cAAc,CAAC,EAAU,EAAE,GAAW,EAAE,GAAW;QACvD,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAClB,6DAA6D;QAC7D,IAAI,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,GAAG,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QACtC,IAAI,CAAC,SAAS,IAAI,GAAG,CAAC;IAC1B,CAAC;CACJ;AA7RD,oCA6RC","sourcesContent":["import { uintBytes } from \"./UintBytes\";\n\n/**\n * Utility class for writing arbitrary data into a Buffer. This class will\n * automatically expand the underlying Buffer and return a trimmed view\n * when complete.\n */\nexport class BufferWriter {\n    private _position: number;\n    private _fixed: boolean;\n    private _buffer: Buffer;\n\n    /**\n     * Constructs a BufferWriter that can optionally wrap an existing Buffer.\n     * If no buffer is provided, the BufferWriter will internally manage an\n     * exponentially growing Buffer to allow writing of data of an unknown size.\n     *\n     * If a Buffer is provided, writing that would overflow will throw an\n     * exception.\n     * @param buffer\n     */\n    constructor(buffer?: Buffer) {\n        this._position = 0;\n        this._fixed = !!buffer;\n        this._buffer = buffer || Buffer.alloc(0);\n    }\n\n    /**\n     * Gets the current size of the output Buffer\n     */\n    public get size(): number {\n        return this._position;\n    }\n\n    /**\n     * Returns the Buffer which will be either the full Buffer if this was a\n     * fixed Buffer or will be the expandable Buffer sliced to the current\n     * position\n     */\n    public toBuffer(): Buffer {\n        if (this._fixed) return this._buffer;\n        else return this._buffer.slice(0, this._position);\n    }\n\n    /**\n     * Returns the Buffer as a hex encoded string. This is functionally\n     * a call to `toBuffer` followed by `toString(\"hex\")`.\n     * @returns\n     */\n    public toHex(): string {\n        return this.toBuffer().toString(\"hex\");\n    }\n\n    /**\n     * Write at the current positiion\n     * @param val\n     */\n    public writeUInt8(val: number) {\n        this._writeStandard(this.writeUInt8.name, val, 1);\n    }\n\n    /**\n     * Write at the current positiion\n     * @param val\n     */\n    public writeUInt16LE(val: number) {\n        this._writeStandard(this.writeUInt16LE.name, val, 2);\n    }\n\n    /**\n     * Write at the current positiion\n     * @param val\n     */\n    public writeUInt16BE(val: number) {\n        this._writeStandard(this.writeUInt16BE.name, val, 2);\n    }\n\n    /**\n     * Write at the current positiion\n     * @param val\n     */\n    public writeUInt32LE(val: number) {\n        this._writeStandard(this.writeUInt32LE.name, val, 4);\n    }\n\n    /**\n     * Write at the current positiion\n     * @param val\n     */\n    public writeUInt32BE(val: number) {\n        this._writeStandard(this.writeUInt32BE.name, val, 4);\n    }\n\n    /**\n     * Write at the current positiion\n     * @param value\n     */\n    public writeUInt64LE(value: number | bigint) {\n        const val = BigInt(value);\n        if (val < 0 || val >= BigInt(2) ** BigInt(64)) {\n            throw new RangeError(\n                `The value of \"value\" is out of range. It must be >= 0 and <= 18446744073709551615. Received ${value.toString()}`,\n            );\n        }\n        const buf = Buffer.from(val.toString(16).padStart(16, \"0\"), \"hex\");\n        this.writeBytes(buf.reverse());\n    }\n\n    /**\n     * Write at the current positiion\n     * @param value\n     */\n    public writeUInt64BE(value: number | bigint) {\n        const val = BigInt(value);\n        if (val < 0 || val >= BigInt(2) ** BigInt(64)) {\n            throw new RangeError(\n                `The value of \"value\" is out of range. It must be >= 0 and <= 18446744073709551615. Received ${value.toString()}`,\n            );\n        }\n        const buf = Buffer.from(val.toString(16).padStart(16, \"0\"), \"hex\");\n        this.writeBytes(buf);\n    }\n\n    /**\n     * Writes the number in the specified number of bytes.\n     * @param val\n     * @param bytes\n     */\n    public writeUIntLE(val: number, len: number) {\n        if (uintBytes(val) > len) {\n            throw new RangeError(`Value ${val} exceeds byte length ${len}`);\n        }\n        this._expand(len);\n        this._buffer.writeUIntLE(val, this._position, len);\n        this._position += len;\n    }\n\n    /**\n     * Writes the number in the specified number of bytes.\n     * @param value\n     * @param bytes\n     */\n    public writeUIntBE(val: number, len: number) {\n        if (uintBytes(val) > len) {\n            throw new RangeError(`Value ${val} exceeds byte length ${len}`);\n        }\n        this._expand(len);\n        this._buffer.writeUIntBE(val, this._position, len);\n        this._position += len;\n    }\n\n    /**\n     * Write bytes at the current positiion\n     * @param buffer\n     */\n    public writeBytes(buffer: Buffer) {\n        if (!buffer || !buffer.length) return;\n        this._expand(buffer.length);\n        buffer.copy(this._buffer, this._position);\n        this._position += buffer.length;\n    }\n\n    /**\n     * Reads a variable length unsigned integer in little-endian as specified in\n     * the Bitcoin protocol documentation.\n     *\n     * < 0xfd = 1 byte number\n     *   0xfd = 2 byte number (3 bytes total)\n     *   0xfe = 4 byte number (5 bytes total)\n     *   0xff = 8 byte number (9 bytes total)\n     */\n    public writeVarInt(val: bigint | number) {\n        const num = BigInt(val);\n        if (num < BigInt(0xfd)) {\n            this.writeUInt8(Number(num));\n        } else if (num < BigInt(0x10000)) {\n            this.writeUInt8(0xfd);\n            this.writeUInt16LE(Number(num));\n        } else if (num < BigInt(0x100000000)) {\n            this.writeUInt8(0xfe);\n            this.writeUInt32LE(Number(num));\n        } else {\n            this.writeUInt8(0xff);\n            this.writeUInt64LE(num);\n        }\n    }\n\n    /**\n     * Reads a variable length unsigned integer as specified in the Lightning Network\n     * protocol documentation and always returns a BigInt to maintain a consistent\n     * call signature.\n     *\n     * @remarks\n     * Specified in:\n     * https://github.com/lightningnetwork/lightning-rfc/blob/master/01-messaging.md#appendix-a-bigsize-test-vectors\n     *\n     * < 0xfd = 1 byte number\n     *   0xfd = 2 byte number (3 bytes total)\n     *   0xfe = 4 byte number (5 bytes total)\n     *   0xff = 8 byte number (9 bytes total)\n     */\n    public writeBigSize(val: bigint | number) {\n        const num = BigInt(val);\n        if (num < BigInt(0xfd)) {\n            this.writeUInt8(Number(num));\n        } else if (num < BigInt(0x10000)) {\n            this.writeUInt8(0xfd);\n            this.writeUInt16BE(Number(num));\n        } else if (num < BigInt(0x100000000)) {\n            this.writeUInt8(0xfe);\n            this.writeUInt32BE(Number(num));\n        } else {\n            this.writeUInt8(0xff);\n            this.writeUInt64BE(num);\n        }\n    }\n\n    /**\n     * TLV 0 to 2 byte unsigned integer encoded in big-endian.\n     * @param val\n     */\n    public writeTUInt16(val: number) {\n        if (val === 0) return;\n        const size = val > 0xff ? 2 : 1;\n        this._expand(size);\n        this._buffer.writeUIntBE(val, this._position, size);\n        this._position += size;\n    }\n\n    /**\n     * TLV 0 to 4 byte unsigned integer encoded in big-endian.\n     */\n    public writeTUInt32(val: number) {\n        if (val === 0) return;\n        const size = val > 0xffffff ? 4 : val > 0xffff ? 3 : val > 0xff ? 2 : 1;\n        this._expand(size);\n        this._buffer.writeUIntBE(val, this._position, size);\n        this._position += size;\n    }\n\n    /**\n     * TLV 0 to 8 byte unsigned integer encoded in big-endian.\n     */\n    public writeTUInt64(val: bigint) {\n        if (val === BigInt(0)) return;\n        let valString = val.toString(16);\n        if (valString.length % 2 === 1) valString = \"0\" + valString;\n        const buf = Buffer.from(valString, \"hex\");\n        this.writeBytes(buf);\n    }\n\n    /**\n     * Expands the underlying buffer as needed by doubling the size of the\n     * Buffer when it needs to grow.\n     * @param needed\n     */\n    private _expand(needed: number) {\n        const required = this._position + needed;\n\n        // Ensure that a fixed Buffer length is not violated\n        if (this._fixed && required > this._buffer.length) {\n            throw new RangeError(\"Out of range\");\n        }\n\n        // expand the buffer if the current buffer is insufficiently lengthed\n        if (this._buffer.length < required) {\n            // calculate the new length based on the required length and some\n            // maths where we determine the number of bytes required and at the\n            // next power of 2.\n            const newLen = 1 << Math.ceil(Math.log2(required));\n            const newBuf = Buffer.alloc(newLen);\n\n            // copy the old data to the new buffer and then dispose of the old\n            // buffer\n            this._buffer.copy(newBuf);\n            this._buffer = newBuf;\n        }\n    }\n\n    /**\n     * Helper for writing to the buffer using built-in write\n     * functions\n     * @param fn name of function\n     * @param val number to write\n     * @param len length of number in bytes\n     */\n    private _writeStandard(fn: string, val: number, len: number) {\n        this._expand(len);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        this._buffer[fn](val, this._position);\n        this._position += len;\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ecf0f674994c381cc4f94be4645761e6183eabb2"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/UintBytes.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/UintBytes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":27}},"2":{"start":{"line":5,"column":4},"end":{"line":5,"column":45}},"3":{"start":{"line":7,"column":0},"end":{"line":7,"column":30}}},"fnMap":{"0":{"name":"uintBytes","decl":{"start":{"line":4,"column":9},"end":{"line":4,"column":18}},"loc":{"start":{"line":4,"column":24},"end":{"line":6,"column":1}},"line":4}},"branchMap":{},"s":{"0":1,"1":1,"2":14,"3":1},"f":{"0":14},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/UintBytes.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/UintBytes.ts"],"names":[],"mappings":";;;AAAA,SAAgB,SAAS,CAAC,GAAW;IACjC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,GAAG,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC;AAC7C,CAAC;AAFD,8BAEC","sourcesContent":["export function uintBytes(num: number): number {\n    return Math.ceil(Math.log2(num + 1) / 8);\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a33ccd3efb699e4708a4ba61aba0f114452230a2"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/encodeVarInt.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/encodeVarInt.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":16,"column":4},"end":{"line":43,"column":5}},"3":{"start":{"line":17,"column":8},"end":{"line":17,"column":40}},"4":{"start":{"line":20,"column":9},"end":{"line":43,"column":5}},"5":{"start":{"line":21,"column":20},"end":{"line":21,"column":35}},"6":{"start":{"line":22,"column":8},"end":{"line":22,"column":22}},"7":{"start":{"line":23,"column":8},"end":{"line":23,"column":40}},"8":{"start":{"line":24,"column":8},"end":{"line":24,"column":19}},"9":{"start":{"line":27,"column":9},"end":{"line":43,"column":5}},"10":{"start":{"line":28,"column":20},"end":{"line":28,"column":35}},"11":{"start":{"line":29,"column":8},"end":{"line":29,"column":22}},"12":{"start":{"line":30,"column":8},"end":{"line":30,"column":40}},"13":{"start":{"line":31,"column":8},"end":{"line":31,"column":19}},"14":{"start":{"line":34,"column":9},"end":{"line":43,"column":5}},"15":{"start":{"line":35,"column":20},"end":{"line":35,"column":35}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":22}},"17":{"start":{"line":37,"column":8},"end":{"line":37,"column":43}},"18":{"start":{"line":38,"column":8},"end":{"line":38,"column":19}},"19":{"start":{"line":42,"column":8},"end":{"line":42,"column":50}},"20":{"start":{"line":45,"column":0},"end":{"line":45,"column":36}}},"fnMap":{"0":{"name":"encodeVarInt","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":21}},"loc":{"start":{"line":14,"column":25},"end":{"line":44,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":4},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":16,"column":4},"end":{"line":43,"column":5}},{"start":{"line":16,"column":4},"end":{"line":43,"column":5}}],"line":16},"1":{"loc":{"start":{"line":20,"column":9},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":20,"column":9},"end":{"line":43,"column":5}},{"start":{"line":20,"column":9},"end":{"line":43,"column":5}}],"line":20},"2":{"loc":{"start":{"line":27,"column":9},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":27,"column":9},"end":{"line":43,"column":5}},{"start":{"line":27,"column":9},"end":{"line":43,"column":5}}],"line":27},"3":{"loc":{"start":{"line":34,"column":9},"end":{"line":43,"column":5}},"type":"if","locations":[{"start":{"line":34,"column":9},"end":{"line":43,"column":5}},{"start":{"line":34,"column":9},"end":{"line":43,"column":5}}],"line":34}},"s":{"0":1,"1":1,"2":19,"3":6,"4":13,"5":5,"6":5,"7":5,"8":5,"9":8,"10":4,"11":4,"12":4,"13":4,"14":4,"15":4,"16":4,"17":4,"18":4,"19":0,"20":1},"f":{"0":19},"b":{"0":[6,13],"1":[5,8],"2":[4,4],"3":[4,0]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/encodeVarInt.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/encodeVarInt.ts"],"names":[],"mappings":";;;AAAA;;;;;;;;;GASG;AACH,SAAgB,YAAY,CAAC,CAAkB;IAC3C,uBAAuB;IACvB,IAAI,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE;QACpB,OAAO,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KACnC;IACD,wBAAwB;SACnB,IAAI,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,EAAE;QAC5B,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACd,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO,GAAG,CAAC;KACd;IACD,wBAAwB;SACnB,IAAI,CAAC,GAAG,MAAM,CAAC,aAAa,CAAC,EAAE;QAChC,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACd,GAAG,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAChC,OAAO,GAAG,CAAC;KACd;IACD,wBAAwB;SACnB,IAAI,CAAC,GAAG,MAAM,CAAC,qBAAqB,CAAC,EAAE;QACxC,MAAM,GAAG,GAAG,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC5B,GAAG,CAAC,CAAC,CAAC,GAAG,IAAI,CAAC;QACd,GAAG,CAAC,gBAAgB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QACnC,OAAO,GAAG,CAAC;KACd;IACD,YAAY;SACP;QACD,MAAM,IAAI,KAAK,CAAC,qBAAqB,CAAC,EAAE,CAAC,CAAC;KAC7C;AACL,CAAC;AA9BD,oCA8BC","sourcesContent":["/**\n * Encodes a number into a VarInt Buffer which is an unsigned integer from\n * 0 to 2^64-1 occupying 1 to 9 bytes. The first byte indicates the variable\n * length and numbers read in little-endian.\n *  < 0xfd   8-bit number\n *    0xfd:  16-bit LE number (3 bytes consumed)\n *    0xfe:  32-bit LE number (5 bytes consumed)\n *    0xff:  64-bit LE number (9 bytes consumed)\n * @param val\n */\nexport function encodeVarInt(i: bigint | number): Buffer {\n    // 8-bit, 1-byte number\n    if (i < BigInt(\"0xfd\")) {\n        return Buffer.from([Number(i)]);\n    }\n    // 16-bit, 2-byte number\n    else if (i < BigInt(\"0x10000\")) {\n        const buf = Buffer.alloc(3);\n        buf[0] = 0xfd;\n        buf.writeUInt16LE(Number(i), 1);\n        return buf;\n    }\n    // 32-bit, 4-byte number\n    else if (i < BigInt(\"0x100000000\")) {\n        const buf = Buffer.alloc(5);\n        buf[0] = 0xfe;\n        buf.writeUInt32LE(Number(i), 1);\n        return buf;\n    }\n    // 64-bit, 8-byte number\n    else if (i < BigInt(\"0x10000000000000000\")) {\n        const buf = Buffer.alloc(9);\n        buf[0] = 0xff;\n        buf.writeBigUInt64LE(BigInt(i), 1);\n        return buf;\n    }\n    // too large\n    else {\n        throw new Error(`Integer too large ${i}`);\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f100ec2ac9088efbe75f45be1674ca920b8c524b"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/Hex.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/Hex.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":21}},"2":{"start":{"line":4,"column":23},"end":{"line":4,"column":48}},"3":{"start":{"line":7,"column":21},"end":{"line":7,"column":23}},"4":{"start":{"line":8,"column":25},"end":{"line":8,"column":29}},"5":{"start":{"line":9,"column":25},"end":{"line":9,"column":35}},"6":{"start":{"line":10,"column":25},"end":{"line":10,"column":31}},"7":{"start":{"line":11,"column":8},"end":{"line":20,"column":9}},"8":{"start":{"line":12,"column":25},"end":{"line":12,"column":47}},"9":{"start":{"line":13,"column":24},"end":{"line":13,"column":98}},"10":{"start":{"line":14,"column":12},"end":{"line":14,"column":23}},"11":{"start":{"line":15,"column":12},"end":{"line":15,"column":23}},"12":{"start":{"line":16,"column":12},"end":{"line":19,"column":38}},"13":{"start":{"line":17,"column":16},"end":{"line":17,"column":30}},"14":{"start":{"line":19,"column":16},"end":{"line":19,"column":38}},"15":{"start":{"line":21,"column":8},"end":{"line":21,"column":22}},"16":{"start":{"line":24,"column":8},"end":{"line":24,"column":52}},"17":{"start":{"line":27,"column":8},"end":{"line":27,"column":52}},"18":{"start":{"line":30,"column":8},"end":{"line":30,"column":52}},"19":{"start":{"line":33,"column":8},"end":{"line":33,"column":52}},"20":{"start":{"line":36,"column":8},"end":{"line":36,"column":66}},"21":{"start":{"line":39,"column":8},"end":{"line":39,"column":35}},"22":{"start":{"line":42,"column":0},"end":{"line":42,"column":18}},"23":{"start":{"line":43,"column":0},"end":{"line":60,"column":2}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":6,"column":4},"end":{"line":6,"column":5}},"loc":{"start":{"line":6,"column":43},"end":{"line":22,"column":5}},"line":6},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":4},"end":{"line":23,"column":5}},"loc":{"start":{"line":23,"column":24},"end":{"line":25,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":26,"column":4},"end":{"line":26,"column":5}},"loc":{"start":{"line":26,"column":27},"end":{"line":28,"column":5}},"line":26},"3":{"name":"(anonymous_3)","decl":{"start":{"line":29,"column":4},"end":{"line":29,"column":5}},"loc":{"start":{"line":29,"column":27},"end":{"line":31,"column":5}},"line":29},"4":{"name":"(anonymous_4)","decl":{"start":{"line":32,"column":4},"end":{"line":32,"column":5}},"loc":{"start":{"line":32,"column":27},"end":{"line":34,"column":5}},"line":32},"5":{"name":"(anonymous_5)","decl":{"start":{"line":35,"column":4},"end":{"line":35,"column":5}},"loc":{"start":{"line":35,"column":25},"end":{"line":37,"column":5}},"line":35},"6":{"name":"(anonymous_6)","decl":{"start":{"line":38,"column":4},"end":{"line":38,"column":5}},"loc":{"start":{"line":38,"column":23},"end":{"line":40,"column":5}},"line":38}},"branchMap":{"0":{"loc":{"start":{"line":6,"column":32},"end":{"line":6,"column":41}},"type":"default-arg","locations":[{"start":{"line":6,"column":37},"end":{"line":6,"column":41}}],"line":6},"1":{"loc":{"start":{"line":16,"column":12},"end":{"line":19,"column":38}},"type":"if","locations":[{"start":{"line":16,"column":12},"end":{"line":19,"column":38}},{"start":{"line":16,"column":12},"end":{"line":19,"column":38}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":28,"4":28,"5":28,"6":28,"7":28,"8":61,"9":61,"10":61,"11":61,"12":61,"13":61,"14":0,"15":28,"16":7,"17":15,"18":6,"19":0,"20":10,"21":0,"22":1,"23":1},"f":{"0":28,"1":7,"2":15,"3":6,"4":0,"5":10,"6":0},"b":{"0":[0],"1":[61,0]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/Hex.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/Hex.ts"],"names":[],"mappings":";;;AAAA,iDAA8C;AAE9C,MAAa,GAAG;IAoBL,MAAM,CAAC,QAAQ,CAAC,GAAW,EAAE,KAAa,EAAE,KAAc,IAAI;QACjE,IAAI,MAAM,GAAG,EAAE,CAAC;QAChB,MAAM,QAAQ,GAAG,IAAW,CAAC;QAC7B,MAAM,QAAQ,GAAG,UAAU,CAAC;QAC5B,MAAM,QAAQ,GAAG,MAAM,CAAC;QACxB,OAAO,KAAK,EAAE;YACV,MAAM,IAAI,GAAG,MAAM,CAAC,GAAG,GAAG,QAAQ,CAAC,CAAC;YACpC,MAAM,GAAG,GAAG,GAAG,CAAC,WAAW,CAAC,CAAC,IAAI,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,GAAG,GAAG,CAAC,WAAW,CAAC,IAAI,GAAG,QAAQ,CAAC,CAAC;YACvF,GAAG,KAAK,EAAE,CAAC;YACX,KAAK,IAAI,CAAC,CAAC;YAEX,IAAI,EAAE;gBAAE,MAAM,IAAI,GAAG,CAAC;;gBACjB,MAAM,GAAG,GAAG,GAAG,MAAM,CAAC;SAC9B;QACD,OAAO,MAAM,CAAC;IAClB,CAAC;IAEM,MAAM,CAAC,KAAK,CAAC,KAAsB;QACtC,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,KAAsB;QACzC,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,KAAsB;QACzC,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,QAAQ,CAAC,KAAsB;QACzC,OAAO,GAAG,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE,CAAC,EAAE,IAAI,CAAC,CAAC;IAChD,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,KAAsB;QACvC,OAAO,2BAAY,CAAC,KAAK,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/C,CAAC;IAEM,MAAM,CAAC,MAAM,CAAC,GAAW;QAC5B,OAAO,GAAG,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;IAC/B,CAAC;;AA3DL,kBA4DC;AA3DiB,eAAW,GAAG;IACxB,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;IACH,GAAG;CACN,CAAC","sourcesContent":["import { encodeVarInt } from \"./encodeVarInt\";\n\nexport class Hex {\n    public static hexAlphabet = [\n        \"0\",\n        \"1\",\n        \"2\",\n        \"3\",\n        \"4\",\n        \"5\",\n        \"6\",\n        \"7\",\n        \"8\",\n        \"9\",\n        \"a\",\n        \"b\",\n        \"c\",\n        \"d\",\n        \"e\",\n        \"f\",\n    ];\n\n    public static bigToHex(num: bigint, bytes: number, le: boolean = true): string {\n        let result = \"\";\n        const bytemask = 0b11111111n;\n        const hquartet = 0b11110000;\n        const lquartet = 0b1111;\n        while (bytes) {\n            const byte = Number(num & bytemask);\n            const hex = Hex.hexAlphabet[(byte & hquartet) >> 4] + Hex.hexAlphabet[byte & lquartet];\n            num >>= 8n;\n            bytes -= 1;\n\n            if (le) result += hex;\n            else result = hex + result;\n        }\n        return result;\n    }\n\n    public static uint8(value: number | bigint): string {\n        return Hex.bigToHex(BigInt(value), 1, true);\n    }\n\n    public static uint16LE(value: number | bigint): string {\n        return Hex.bigToHex(BigInt(value), 2, true);\n    }\n\n    public static uint32LE(value: number | bigint): string {\n        return Hex.bigToHex(BigInt(value), 4, true);\n    }\n\n    public static uint64LE(value: number | bigint): string {\n        return Hex.bigToHex(BigInt(value), 8, true);\n    }\n\n    public static varint(value: number | bigint): string {\n        return encodeVarInt(value).toString(\"hex\");\n    }\n\n    public static buffer(buf: Buffer): string {\n        return buf.toString(\"hex\");\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d7f0f42ebc75e69465edb1ae440293a8a6e2d68e"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bufToStream.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bufToStream.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":4,"column":17},"end":{"line":4,"column":34}},"3":{"start":{"line":9,"column":19},"end":{"line":9,"column":42}},"4":{"start":{"line":10,"column":4},"end":{"line":10,"column":21}},"5":{"start":{"line":11,"column":4},"end":{"line":11,"column":22}},"6":{"start":{"line":12,"column":4},"end":{"line":12,"column":18}},"7":{"start":{"line":14,"column":0},"end":{"line":14,"column":34}}},"fnMap":{"0":{"name":"bufToStream","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":20}},"loc":{"start":{"line":8,"column":26},"end":{"line":13,"column":1}},"line":8}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":32,"4":32,"5":32,"6":32,"7":1},"f":{"0":32},"b":{},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bufToStream.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/bufToStream.ts"],"names":[],"mappings":";;;AAAA,mCAAkC;AAElC;;GAEG;AACH,SAAgB,WAAW,CAAC,GAAW;IACnC,MAAM,MAAM,GAAG,IAAI,iBAAQ,EAAE,CAAC;IAC9B,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;IACjB,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,kBAAkB;IACrC,OAAO,MAAM,CAAC;AAClB,CAAC;AALD,kCAKC","sourcesContent":["import { Readable } from \"stream\";\n\n/**\n * Converts a buffer to a Readable stream.\n */\nexport function bufToStream(buf: Buffer): Readable {\n    const result = new Readable();\n    result.push(buf);\n    result.push(null); // ends the stream\n    return result;\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"bdf9c5616786b36cf69347f9b949216161a1bbd5"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/StreamReader.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/StreamReader.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":30}},"2":{"start":{"line":4,"column":22},"end":{"line":4,"column":46}},"3":{"start":{"line":12,"column":8},"end":{"line":12,"column":29}},"4":{"start":{"line":19,"column":8},"end":{"line":19,"column":64}},"5":{"start":{"line":26,"column":8},"end":{"line":26,"column":64}},"6":{"start":{"line":38,"column":21},"end":{"line":38,"column":37}},"7":{"start":{"line":39,"column":8},"end":{"line":40,"column":32}},"8":{"start":{"line":40,"column":12},"end":{"line":40,"column":32}},"9":{"start":{"line":41,"column":8},"end":{"line":42,"column":47}},"10":{"start":{"line":42,"column":12},"end":{"line":42,"column":47}},"11":{"start":{"line":43,"column":8},"end":{"line":44,"column":47}},"12":{"start":{"line":44,"column":12},"end":{"line":44,"column":47}},"13":{"start":{"line":45,"column":8},"end":{"line":46,"column":42}},"14":{"start":{"line":46,"column":12},"end":{"line":46,"column":42}},"15":{"start":{"line":58,"column":21},"end":{"line":58,"column":37}},"16":{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},"17":{"start":{"line":60,"column":12},"end":{"line":60,"column":32}},"18":{"start":{"line":61,"column":8},"end":{"line":62,"column":47}},"19":{"start":{"line":62,"column":12},"end":{"line":62,"column":47}},"20":{"start":{"line":63,"column":8},"end":{"line":64,"column":47}},"21":{"start":{"line":64,"column":12},"end":{"line":64,"column":47}},"22":{"start":{"line":65,"column":8},"end":{"line":66,"column":50}},"23":{"start":{"line":66,"column":12},"end":{"line":66,"column":50}},"24":{"start":{"line":91,"column":22},"end":{"line":91,"column":41}},"25":{"start":{"line":92,"column":8},"end":{"line":93,"column":35}},"26":{"start":{"line":93,"column":12},"end":{"line":93,"column":35}},"27":{"start":{"line":94,"column":8},"end":{"line":95,"column":38}},"28":{"start":{"line":95,"column":12},"end":{"line":95,"column":38}},"29":{"start":{"line":96,"column":8},"end":{"line":97,"column":35}},"30":{"start":{"line":97,"column":12},"end":{"line":97,"column":35}},"31":{"start":{"line":98,"column":8},"end":{"line":98,"column":21}},"32":{"start":{"line":106,"column":21},"end":{"line":106,"column":38}},"33":{"start":{"line":107,"column":8},"end":{"line":107,"column":37}},"34":{"start":{"line":115,"column":21},"end":{"line":115,"column":38}},"35":{"start":{"line":116,"column":8},"end":{"line":116,"column":37}},"36":{"start":{"line":122,"column":21},"end":{"line":122,"column":38}},"37":{"start":{"line":123,"column":8},"end":{"line":123,"column":23}},"38":{"start":{"line":129,"column":22},"end":{"line":129,"column":39}},"39":{"start":{"line":130,"column":8},"end":{"line":130,"column":37}},"40":{"start":{"line":136,"column":22},"end":{"line":136,"column":39}},"41":{"start":{"line":137,"column":8},"end":{"line":137,"column":37}},"42":{"start":{"line":143,"column":22},"end":{"line":143,"column":39}},"43":{"start":{"line":144,"column":8},"end":{"line":144,"column":37}},"44":{"start":{"line":150,"column":22},"end":{"line":150,"column":39}},"45":{"start":{"line":151,"column":8},"end":{"line":151,"column":37}},"46":{"start":{"line":157,"column":22},"end":{"line":157,"column":39}},"47":{"start":{"line":158,"column":8},"end":{"line":158,"column":40}},"48":{"start":{"line":164,"column":22},"end":{"line":164,"column":39}},"49":{"start":{"line":165,"column":8},"end":{"line":165,"column":40}},"50":{"start":{"line":172,"column":8},"end":{"line":172,"column":35}},"51":{"start":{"line":175,"column":8},"end":{"line":176,"column":49}},"52":{"start":{"line":176,"column":12},"end":{"line":176,"column":49}},"53":{"start":{"line":179,"column":0},"end":{"line":179,"column":36}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":11,"column":4},"end":{"line":11,"column":5}},"loc":{"start":{"line":11,"column":24},"end":{"line":13,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":4},"end":{"line":18,"column":5}},"loc":{"start":{"line":18,"column":24},"end":{"line":20,"column":5}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":27},"end":{"line":27,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":4},"end":{"line":37,"column":5}},"loc":{"start":{"line":37,"column":17},"end":{"line":47,"column":5}},"line":37},"4":{"name":"(anonymous_4)","decl":{"start":{"line":57,"column":4},"end":{"line":57,"column":5}},"loc":{"start":{"line":57,"column":18},"end":{"line":67,"column":5}},"line":57},"5":{"name":"(anonymous_5)","decl":{"start":{"line":90,"column":4},"end":{"line":90,"column":5}},"loc":{"start":{"line":90,"column":17},"end":{"line":99,"column":5}},"line":90},"6":{"name":"(anonymous_6)","decl":{"start":{"line":105,"column":4},"end":{"line":105,"column":5}},"loc":{"start":{"line":105,"column":18},"end":{"line":108,"column":5}},"line":105},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":4},"end":{"line":114,"column":5}},"loc":{"start":{"line":114,"column":18},"end":{"line":117,"column":5}},"line":114},"8":{"name":"(anonymous_8)","decl":{"start":{"line":121,"column":4},"end":{"line":121,"column":5}},"loc":{"start":{"line":121,"column":16},"end":{"line":124,"column":5}},"line":121},"9":{"name":"(anonymous_9)","decl":{"start":{"line":128,"column":4},"end":{"line":128,"column":5}},"loc":{"start":{"line":128,"column":19},"end":{"line":131,"column":5}},"line":128},"10":{"name":"(anonymous_10)","decl":{"start":{"line":135,"column":4},"end":{"line":135,"column":5}},"loc":{"start":{"line":135,"column":19},"end":{"line":138,"column":5}},"line":135},"11":{"name":"(anonymous_11)","decl":{"start":{"line":142,"column":4},"end":{"line":142,"column":5}},"loc":{"start":{"line":142,"column":19},"end":{"line":145,"column":5}},"line":142},"12":{"name":"(anonymous_12)","decl":{"start":{"line":149,"column":4},"end":{"line":149,"column":5}},"loc":{"start":{"line":149,"column":19},"end":{"line":152,"column":5}},"line":149},"13":{"name":"(anonymous_13)","decl":{"start":{"line":156,"column":4},"end":{"line":156,"column":5}},"loc":{"start":{"line":156,"column":22},"end":{"line":159,"column":5}},"line":156},"14":{"name":"(anonymous_14)","decl":{"start":{"line":163,"column":4},"end":{"line":163,"column":5}},"loc":{"start":{"line":163,"column":22},"end":{"line":166,"column":5}},"line":163},"15":{"name":"(anonymous_15)","decl":{"start":{"line":171,"column":4},"end":{"line":171,"column":5}},"loc":{"start":{"line":171,"column":19},"end":{"line":173,"column":5}},"line":171},"16":{"name":"(anonymous_16)","decl":{"start":{"line":174,"column":4},"end":{"line":174,"column":5}},"loc":{"start":{"line":174,"column":23},"end":{"line":177,"column":5}},"line":174}},"branchMap":{"0":{"loc":{"start":{"line":39,"column":8},"end":{"line":40,"column":32}},"type":"if","locations":[{"start":{"line":39,"column":8},"end":{"line":40,"column":32}},{"start":{"line":39,"column":8},"end":{"line":40,"column":32}}],"line":39},"1":{"loc":{"start":{"line":41,"column":8},"end":{"line":42,"column":47}},"type":"if","locations":[{"start":{"line":41,"column":8},"end":{"line":42,"column":47}},{"start":{"line":41,"column":8},"end":{"line":42,"column":47}}],"line":41},"2":{"loc":{"start":{"line":43,"column":8},"end":{"line":44,"column":47}},"type":"if","locations":[{"start":{"line":43,"column":8},"end":{"line":44,"column":47}},{"start":{"line":43,"column":8},"end":{"line":44,"column":47}}],"line":43},"3":{"loc":{"start":{"line":45,"column":8},"end":{"line":46,"column":42}},"type":"if","locations":[{"start":{"line":45,"column":8},"end":{"line":46,"column":42}},{"start":{"line":45,"column":8},"end":{"line":46,"column":42}}],"line":45},"4":{"loc":{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},"type":"if","locations":[{"start":{"line":59,"column":8},"end":{"line":60,"column":32}},{"start":{"line":59,"column":8},"end":{"line":60,"column":32}}],"line":59},"5":{"loc":{"start":{"line":61,"column":8},"end":{"line":62,"column":47}},"type":"if","locations":[{"start":{"line":61,"column":8},"end":{"line":62,"column":47}},{"start":{"line":61,"column":8},"end":{"line":62,"column":47}}],"line":61},"6":{"loc":{"start":{"line":63,"column":8},"end":{"line":64,"column":47}},"type":"if","locations":[{"start":{"line":63,"column":8},"end":{"line":64,"column":47}},{"start":{"line":63,"column":8},"end":{"line":64,"column":47}}],"line":63},"7":{"loc":{"start":{"line":65,"column":8},"end":{"line":66,"column":50}},"type":"if","locations":[{"start":{"line":65,"column":8},"end":{"line":66,"column":50}},{"start":{"line":65,"column":8},"end":{"line":66,"column":50}}],"line":65},"8":{"loc":{"start":{"line":92,"column":8},"end":{"line":93,"column":35}},"type":"if","locations":[{"start":{"line":92,"column":8},"end":{"line":93,"column":35}},{"start":{"line":92,"column":8},"end":{"line":93,"column":35}}],"line":92},"9":{"loc":{"start":{"line":94,"column":8},"end":{"line":95,"column":38}},"type":"if","locations":[{"start":{"line":94,"column":8},"end":{"line":95,"column":38}},{"start":{"line":94,"column":8},"end":{"line":95,"column":38}}],"line":94},"10":{"loc":{"start":{"line":96,"column":8},"end":{"line":97,"column":35}},"type":"if","locations":[{"start":{"line":96,"column":8},"end":{"line":97,"column":35}},{"start":{"line":96,"column":8},"end":{"line":97,"column":35}}],"line":96},"11":{"loc":{"start":{"line":96,"column":12},"end":{"line":96,"column":45}},"type":"binary-expr","locations":[{"start":{"line":96,"column":12},"end":{"line":96,"column":27}},{"start":{"line":96,"column":31},"end":{"line":96,"column":45}}],"line":96},"12":{"loc":{"start":{"line":175,"column":8},"end":{"line":176,"column":49}},"type":"if","locations":[{"start":{"line":175,"column":8},"end":{"line":176,"column":49}},{"start":{"line":175,"column":8},"end":{"line":176,"column":49}}],"line":175},"13":{"loc":{"start":{"line":175,"column":12},"end":{"line":175,"column":44}},"type":"binary-expr","locations":[{"start":{"line":175,"column":12},"end":{"line":175,"column":24}},{"start":{"line":175,"column":28},"end":{"line":175,"column":44}}],"line":175}},"s":{"0":1,"1":1,"2":1,"3":32,"4":1,"5":3,"6":4,"7":4,"8":1,"9":3,"10":1,"11":2,"12":1,"13":1,"14":1,"15":4,"16":4,"17":1,"18":3,"19":1,"20":2,"21":1,"22":1,"23":1,"24":39,"25":39,"26":1,"27":38,"28":36,"29":30,"30":1,"31":29,"32":1,"33":1,"34":1,"35":1,"36":10,"37":9,"38":3,"39":2,"40":3,"41":2,"42":3,"43":2,"44":3,"45":2,"46":3,"47":2,"48":3,"49":2,"50":1,"51":36,"52":8,"53":1},"f":{"0":32,"1":1,"2":3,"3":4,"4":4,"5":39,"6":1,"7":1,"8":10,"9":3,"10":3,"11":3,"12":3,"13":3,"14":3,"15":1,"16":36},"b":{"0":[1,3],"1":[1,2],"2":[1,1],"3":[1,0],"4":[1,3],"5":[1,2],"6":[1,1],"7":[1,0],"8":[1,38],"9":[36,2],"10":[1,29],"11":[30,2],"12":[8,28],"13":[36,35]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/StreamReader.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/StreamReader.ts"],"names":[],"mappings":"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","sourcesContent":["import { Readable } from \"stream\";\nimport { bufToStream } from \"./bufToStream\";\n\n/**\n * Wraps a readable stream and provides utilities to assist with reading values\n * off the stream. If there is an attempt to read past the stream, an exception\n * will thrown.\n */\nexport class StreamReader {\n    /**\n     * Constructs a new StreamReader from the provided hex string.\n     * @param hex\n     */\n    public static fromHex(hex: string): StreamReader {\n        return StreamReader.fromBuffer(Buffer.from(hex, \"hex\"));\n    }\n\n    /**\n     * Constructs a new StreamReader from the provided Buffer\n     * @param buf\n     */\n    public static fromBuffer(buf: Buffer): StreamReader {\n        return new StreamReader(bufToStream(buf));\n    }\n\n    constructor(readonly stream: Readable) {}\n\n    /**\n     * Reads a VarInt from Bitcoin which is an unsigned integer from\n     * 0 to 2^64-1 occupying 1 to 9 bytes. The first byte indicates the variable\n     * length and numbers read in little-endian.\n     *  < 0xfd   8-bit number\n     *    0xfd:  16-bit LE number (3 bytes consumed)\n     *    0xfe:  32-bit LE number (5 bytes consumed)\n     *    0xff:  64-bit LE number (9 bytes consumed)\n     */\n    public readVarInt(): bigint {\n        const byte = this.readUInt8();\n        if (byte < 0xfd) return BigInt(byte);\n        if (byte === 0xfd) return BigInt(this.readUInt16LE());\n        if (byte === 0xfe) return BigInt(this.readUInt32LE());\n        if (byte === 0xff) return this.readBigUInt64LE();\n    }\n\n    /**\n     * Reads a BigSize from BOLT specs which is an unsigned integer from\n     * 0 to 2^64-1 occupying 1 to 9 bytes. The first byte indicates the variable\n     * length and numbers read in big-endian.\n     *  < 0xfd   8-bit number\n     *    0xfd:  16-bit BE number (3 bytes consumed)\n     *    0xfe:  32-bit BE number (5 bytes consumed)\n     *    0xff:  64-bit BE number (9 bytes consumed)\n     */\n    public readBigSize(): bigint {\n        const byte = this.readUInt8();\n        if (byte < 0xfd) return BigInt(byte);\n        if (byte === 0xfd) return BigInt(this.readUInt16BE());\n        if (byte === 0xfe) return BigInt(this.readUInt32BE());\n        if (byte === 0xff) return BigInt(this.readBigUInt64BE());\n    }\n\n    /**\n     * Reads `n` bytes from the stream and returns a Buffer. This function\n     * operates in two modes:\n     *   1. length is provided\n     *   2. length is not provided\n     *\n     * If the length is provided and the requested bytes are not available\n     * on the stream an exception will be thrown.\n     *\n     * If no length is provided it will return the remaining bytes in the Stream\n     * or it will return an empty buffer if all bytes have been read from the\n     * stream.\n     *\n     * @remarks\n     * This functionality differs from the standard stream interface. In the\n     * event a length is provided, the stream will return the any remaining\n     * bytes. This method performs a length check to ensure the full data read\n     * occurred to prevent downstream length checks from being required. The\n     * stream functionality also returns a null if there is no additional data\n     * to be read from the stream.\n     * @param n\n     */\n    public readBytes(n?: number): Buffer {\n        const bytes = this.stream.read(n) as Buffer;\n        if (n === 0) return Buffer.alloc(0);\n        if (n !== undefined) this._assertLen(bytes, n);\n        if (n === undefined && bytes === null) return Buffer.alloc(0);\n        return bytes;\n    }\n\n    /**\n     * Reads the supplied number of bytes and converts the bytes into a\n     * little-endian unsigned integer.\n     * @param n\n     */\n    public readUIntLE(n: number): number {\n        const byte = this.readBytes(n);\n        return byte.readUIntLE(0, n);\n    }\n\n    /**\n     * Reads the supplied number of bytes and converts the bytes into a\n     * little-endian unsigned integer.\n     * @param n\n     */\n    public readUIntBE(n: number): number {\n        const byte = this.readBytes(n);\n        return byte.readUIntBE(0, n);\n    }\n\n    /**\n     * Reads a UInt8 from the stream\n     */\n    public readUInt8(): number {\n        const byte = this.readBytes(1);\n        return byte[0];\n    }\n\n    /**\n     * Reads a UInt16 in little-endian from the stream\n     */\n    public readUInt16LE(): number {\n        const bytes = this.readBytes(2);\n        return bytes.readUInt16LE(0);\n    }\n\n    /**\n     * Reads a UInt16 in big-endian from the stream\n     */\n    public readUInt16BE(): number {\n        const bytes = this.readBytes(2);\n        return bytes.readUInt16BE(0);\n    }\n\n    /**\n     * Reads a UInt32 in little-endian from the stream\n     */\n    public readUInt32LE(): number {\n        const bytes = this.readBytes(4);\n        return bytes.readUInt32LE(0);\n    }\n\n    /**\n     * Reads a UInt32 in big-endian from the stream\n     */\n    public readUInt32BE(): number {\n        const bytes = this.readBytes(4);\n        return bytes.readUInt32BE(0);\n    }\n\n    /**\n     * Reads a UInt64 in little-endian from the stream\n     */\n    public readBigUInt64LE(): bigint {\n        const bytes = this.readBytes(8);\n        return bytes.readBigUInt64LE(0);\n    }\n\n    /**\n     * Reads a UInt64 in big-endian from the stream\n     */\n    public readBigUInt64BE(): bigint {\n        const bytes = this.readBytes(8);\n        return bytes.readBigUInt64BE(0);\n    }\n\n    /**\n     * Pushes bytes back on to the stream\n     * @param chunk\n     */\n    public unshift(chunk: Buffer): void {\n        this.stream.unshift(chunk);\n    }\n\n    private _assertLen(val: Buffer, n: number) {\n        if (val === null || val.length !== n) throw new RangeError(\"Out of range\");\n    }\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"863ea912f2efe46ef5ee67a6879910bba72ba190"},"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/varIntBytes.ts":{"path":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/varIntBytes.ts","statementMap":{"0":{"start":{"line":2,"column":0},"end":{"line":2,"column":62}},"1":{"start":{"line":3,"column":0},"end":{"line":3,"column":29}},"2":{"start":{"line":9,"column":4},"end":{"line":10,"column":42}},"3":{"start":{"line":10,"column":8},"end":{"line":10,"column":42}},"4":{"start":{"line":11,"column":4},"end":{"line":12,"column":17}},"5":{"start":{"line":12,"column":8},"end":{"line":12,"column":17}},"6":{"start":{"line":13,"column":4},"end":{"line":14,"column":17}},"7":{"start":{"line":14,"column":8},"end":{"line":14,"column":17}},"8":{"start":{"line":15,"column":4},"end":{"line":16,"column":17}},"9":{"start":{"line":16,"column":8},"end":{"line":16,"column":17}},"10":{"start":{"line":17,"column":4},"end":{"line":18,"column":17}},"11":{"start":{"line":18,"column":8},"end":{"line":18,"column":17}},"12":{"start":{"line":19,"column":4},"end":{"line":19,"column":38}},"13":{"start":{"line":21,"column":0},"end":{"line":21,"column":34}}},"fnMap":{"0":{"name":"varIntBytes","decl":{"start":{"line":8,"column":9},"end":{"line":8,"column":20}},"loc":{"start":{"line":8,"column":26},"end":{"line":20,"column":1}},"line":8}},"branchMap":{"0":{"loc":{"start":{"line":9,"column":4},"end":{"line":10,"column":42}},"type":"if","locations":[{"start":{"line":9,"column":4},"end":{"line":10,"column":42}},{"start":{"line":9,"column":4},"end":{"line":10,"column":42}}],"line":9},"1":{"loc":{"start":{"line":11,"column":4},"end":{"line":12,"column":17}},"type":"if","locations":[{"start":{"line":11,"column":4},"end":{"line":12,"column":17}},{"start":{"line":11,"column":4},"end":{"line":12,"column":17}}],"line":11},"2":{"loc":{"start":{"line":13,"column":4},"end":{"line":14,"column":17}},"type":"if","locations":[{"start":{"line":13,"column":4},"end":{"line":14,"column":17}},{"start":{"line":13,"column":4},"end":{"line":14,"column":17}}],"line":13},"3":{"loc":{"start":{"line":15,"column":4},"end":{"line":16,"column":17}},"type":"if","locations":[{"start":{"line":15,"column":4},"end":{"line":16,"column":17}},{"start":{"line":15,"column":4},"end":{"line":16,"column":17}}],"line":15},"4":{"loc":{"start":{"line":17,"column":4},"end":{"line":18,"column":17}},"type":"if","locations":[{"start":{"line":17,"column":4},"end":{"line":18,"column":17}},{"start":{"line":17,"column":4},"end":{"line":18,"column":17}}],"line":17}},"s":{"0":1,"1":1,"2":15,"3":1,"4":14,"5":3,"6":11,"7":4,"8":7,"9":3,"10":4,"11":3,"12":1,"13":1},"f":{"0":15},"b":{"0":[1,14],"1":[3,11],"2":[4,7],"3":[3,4],"4":[3,1]},"inputSourceMap":{"version":3,"file":"/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/varIntBytes.ts","sources":["/Users/bmancini/code/altangent/node-lightning/packages/bufio/lib/varIntBytes.ts"],"names":[],"mappings":";;;AAAA;;;GAGG;AACH,SAAgB,WAAW,CAAC,GAAoB;IAC5C,IAAI,GAAG,GAAG,CAAC;QAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;IAC/C,IAAI,GAAG,GAAG,IAAI;QAAE,OAAO,CAAC,CAAC;IACzB,IAAI,GAAG,IAAI,MAAM;QAAE,OAAO,CAAC,CAAC;IAC5B,IAAI,GAAG,IAAI,UAAU;QAAE,OAAO,CAAC,CAAC;IAChC,IAAI,GAAG,IAAI,kBAAkB;QAAE,OAAO,CAAC,CAAC;IACxC,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;AACtC,CAAC;AAPD,kCAOC","sourcesContent":["/**\n * Returns the number of bytes for a VarInt\n * @param val\n */\nexport function varIntBytes(val: number | BigInt) {\n    if (val < 0) throw new Error(\"Invalid varint\");\n    if (val < 0xfd) return 1;\n    if (val <= 0xffff) return 3;\n    if (val <= 0xffffffff) return 5;\n    if (val <= 0xffffffffffffffff) return 9;\n    throw new Error(\"Invalid varint\");\n}\n"]},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"53162c47ead2cb45f68e69354c93674248323775"}}