"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Hex = void 0;
const encodeVarInt_1 = require("./encodeVarInt");
class Hex {
    static bigToHex(num, bytes, le = true) {
        let result = "";
        const bytemask = 255n;
        const hquartet = 0b11110000;
        const lquartet = 0b1111;
        while (bytes) {
            const byte = Number(num & bytemask);
            const hex = Hex.hexAlphabet[(byte & hquartet) >> 4] + Hex.hexAlphabet[byte & lquartet];
            num >>= 8n;
            bytes -= 1;
            if (le)
                result += hex;
            else
                result = hex + result;
        }
        return result;
    }
    static uint8(value) {
        return Hex.bigToHex(BigInt(value), 1, true);
    }
    static uint16LE(value) {
        return Hex.bigToHex(BigInt(value), 2, true);
    }
    static uint32LE(value) {
        return Hex.bigToHex(BigInt(value), 4, true);
    }
    static uint64LE(value) {
        return Hex.bigToHex(BigInt(value), 8, true);
    }
    static varint(value) {
        return encodeVarInt_1.encodeVarInt(value).toString("hex");
    }
    static buffer(buf) {
        return buf.toString("hex");
    }
}
exports.Hex = Hex;
Hex.hexAlphabet = [
    "0",
    "1",
    "2",
    "3",
    "4",
    "5",
    "6",
    "7",
    "8",
    "9",
    "a",
    "b",
    "c",
    "d",
    "e",
    "f",
];
//# sourceMappingURL=Hex.js.map