/// <reference types="node" />
import { AesKey } from "./aes-key";
/**
 * Encrypts data using AES
 * @param key symmetric key
 * @param buffer plaintext to encrypt
 */
export declare function aesEncrypt({ key, buffer }: {
    key: Buffer;
    buffer: Buffer;
}): Buffer;
/**
 * Decrypts data using AES.
 * @param key symmetric key
 * @param buffer ciphertext to decrypt
 */
export declare function aesDecrypt({ key, buffer }: {
    key: Buffer;
    buffer: Buffer;
}): Buffer;
/**
 * Generate a a secure key from the passphrase and salt
 * by performing PBKDF2. If no salt is provided one is
 * generated via randomBytes.
 *
 * @param passphrase
 * @param [salt] 16-byte buffer or more
 */
export declare function createAesKey({ passphrase, salt }: {
    passphrase: string;
    salt?: Buffer;
}): AesKey;
